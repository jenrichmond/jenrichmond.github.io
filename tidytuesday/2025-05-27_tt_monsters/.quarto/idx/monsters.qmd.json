{"title":"Tidy Tuesday Week 21","markdown":{"yaml":{"title":"Tidy Tuesday Week 21","subtitle":"Dungeons and Dragons Monsters","date":"today","output":"html_document","author":"Jen Richmond"},"headingText":"load packages","containsRefs":false,"markdown":"\n\nThis week for TidyTuesday I decided to look at dragons within the dataset and practice writing a ggplot function that makes it easy to create the same plot for each level of a variable. In this case, I wanted a function that would spit me out a boxplot comparing the different dragon types on each of the key measures (strength, intelligence, wisdom, charisma, dexerity, and constitution). \n\n\n```{r libraries, message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(janitor)\nlibrary(ggeasy)\nlibrary(patchwork)\nlibrary(Hmisc) # for %nin%\n\n# adjust year/week values here\nyear = 2025\nweek = 21\n```\n\n# get the data\n\n```{r get}\n\ntt <- tt_load(year, week)\n\ndf <- tt[[1]]\n\nhead(df)\n```\n\n# make a plot theme\n\n```{r}\n# plot theme\n\ntheme_dragons <- function() { \n  \n  theme_minimal() %+replace%\n    theme(\n    plot.title = element_text(size = 16, hjust = 0.05, \n                              colour = \"black\",  \n                              margin = margin(b = 5)),\n    plot.subtitle = element_text(size = 12, hjust = 0.05, \n                                 colour = \"black\",  \n                                 margin = margin(b = 5)),\n    plot.title.position = \"plot\",  # Position at the \"plot\" level rather than \"panel\"\n    panel.background = element_rect(fill = \"ghostwhite\", color = NA),\n    plot.background = element_rect(fill = \"ghostwhite\", color = NA),\n    plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")\n    \n      )\n    \n}\n\n# set the custom theme to apply to all plots in this document \n\ntheme_set(theme_dragons())\n```\n\n\n# wrangling\n\nHere I am deciding to look at dragons. I need to filter out dragon types that only have a single row in the data. I am making the data long and adding a new column that is the mean_score on each of the variables for each dragon type (to allow for ordering later on). \n```{r clean}\n\ndf %>%\n  tabyl(type) %>%\n  arrange(-n) %>%\n  head()\n\ndragons <- df %>%\n  filter(type == \"Dragon\") %>%\n  select(name, category, type, str:cha) \n\ndragons %>%\n  tabyl(category) %>%\n   arrange(n) %>%\n  head()\n\nsingle_dragons <- c(\"Dragon Turtle\", \"Half-Dragon\", \"Kobold\", \"Pseudodragon\", \"Wyvern\")\n\ndragons_long <- dragons %>%\n  filter(category %nin% single_dragons) %>%\n  pivot_longer(names_to = \"index\", values_to = \"score\", str:cha) %>%\n  mutate(measure = case_when(index == \"str\" ~ \"Strength\", \n                                  index == \"dex\" ~ \"Dexterity\", \n                                  index == \"con\" ~ \"Constitution\", \n                                  index == \"int\" ~ \"Intelligence\", \n                                  index == \"wis\" ~ \"Wisdom\", \n                                  index == \"cha\" ~ \"Charisma\", \n                                  ))\n\ndragons_long <- dragons_long %>%\n  group_by(category, index) %>%\n  mutate(mean_score = mean(score))\n\n```\n\n\n# make a plot\n\nI make a basic plot using just the strength scores and work out how to order the boxplots by mean strength scores (see what i learned below for alternative options I played with). \n\n```{r}\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = reorder(category, mean_score), y = score, fill = category)) +\n    geom_boxplot(alpha = 0.5) +\n    coord_flip() +\n    labs(\n      x = \"Type of dragon\",\n      y = \"Score\",\n      title = \"Dragon Strength Scores\"\n    ) +\n    easy_remove_legend()\n```\n\n\n# write a function\n\nNow to turn that code into a function. Here my function takes a dataframe and a value of the variable we are interested in (in this case index). It filters the data for that value, pulls out the value of measure (to use as a subtitle label), then plots the filtered data. \n\n\n```{r}\nplot_dragon_index <- function(data, variable) {\n  filtered_data <- data %>%\n    filter(index == variable) \n  \n  measure <- filtered_data$measure[1]\n  \n  filtered_data %>%\n    ggplot(aes(x = reorder(category, mean_score), y = score, fill = category)) +\n    geom_boxplot(alpha = 0.5) +\n    coord_flip() +\n    labs(\n      x = \"Type of dragon\",\n      y = \"Score\",\n      subtitle = paste(measure, \"Scores\")\n    ) +\n    easy_remove_legend()\n}\n```\n\n# test the function\n\n```{r}\n\nplot_dragon_index(dragons_long, \"str\")\n\n```\n\n# combine plots\n\n```{r}\n\nplot_dragon_index(dragons_long, \"str\") + plot_dragon_index(dragons_long, \"int\") +\n      plot_annotation(\n             title = \"Characteristics by Dragon Type\",\n              theme = theme(\n      plot.title = element_text(\n        hjust = 0,            # align left\n        size = 16,\n        color = \"black\",\n        margin = margin(b = 5))  # spacing below title\n    )\n  )\n\n\n```\n\n\n```{r include = FALSE}\nggsave(\"strength_intelligence.png\", width = 6, height = 4,  bg = \"white\")\n\n```\n\n```{r}\n  \nplot_dragon_index(dragons_long, \"wis\") + plot_dragon_index(dragons_long, \"cha\") +\n  plot_annotation(\n             title = \"Characteristics by Dragon Type\",\n              theme = theme(\n      plot.title = element_text(\n        hjust = 0,            # align left\n        size = 16,\n        color = \"black\",\n        margin = margin(b = 5))  # spacing below title\n    )\n  )\n\n```\n\n```{r include = FALSE}\n\nggsave(\"wisdom_charisma.png\", width = 6, height = 4,  bg = \"white\")\n\n```\n\n\n# Three things I learned... \n\n\n## 1. theme_set()\n\nYou can make a custom ggplot theme and then automatically use it for all the plots in your Quarto Document using theme_set()\n\n```{r eval=FALSE}\ntheme_set(theme_custom())\n```\n\n\n## 2. plot_annotation\n\nWhen using the `patchwork` package to combine plots you can use `plot_annotation()` to add titles etc to your combined plot. You can also use theme() functions, in much the same way you would for ggplot to control your title, margins or background. See [patchwork vignette](http://patchwork.data-imaginist.com/reference/plot_annotation.html) \n\n```{r eval = FALSE}\n\nplot1 + plot2 +\n    plot_annotation(title = \"My title\",\n              theme = \n                theme(plot.background = element_rect(fill = \"ghostwhite\"),\n                      plot.margin = margin(20, 20, 20, 20),  # T, R, B, L \n                      plot.title = element_text(hjust = 0, # align left\n                                                size = 16,  color = \"black\",  \n                      margin = margin(b = 5))  # spacing below title\n    )\n  )\n```\n\n\n## 3. how to reorder x axis in ggplot \n\n::: panel-tabset\n\n### default\n\n```{r}\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = category, y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n### factor reverse\n\n```{r}\n\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = fct_rev(category), y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n### mean score\n\n```{r}\n\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = reorder(category,mean_score), y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n:::\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\nThis week for TidyTuesday I decided to look at dragons within the dataset and practice writing a ggplot function that makes it easy to create the same plot for each level of a variable. In this case, I wanted a function that would spit me out a boxplot comparing the different dragon types on each of the key measures (strength, intelligence, wisdom, charisma, dexerity, and constitution). \n\n# load packages\n\n```{r libraries, message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(janitor)\nlibrary(ggeasy)\nlibrary(patchwork)\nlibrary(Hmisc) # for %nin%\n\n# adjust year/week values here\nyear = 2025\nweek = 21\n```\n\n# get the data\n\n```{r get}\n\ntt <- tt_load(year, week)\n\ndf <- tt[[1]]\n\nhead(df)\n```\n\n# make a plot theme\n\n```{r}\n# plot theme\n\ntheme_dragons <- function() { \n  \n  theme_minimal() %+replace%\n    theme(\n    plot.title = element_text(size = 16, hjust = 0.05, \n                              colour = \"black\",  \n                              margin = margin(b = 5)),\n    plot.subtitle = element_text(size = 12, hjust = 0.05, \n                                 colour = \"black\",  \n                                 margin = margin(b = 5)),\n    plot.title.position = \"plot\",  # Position at the \"plot\" level rather than \"panel\"\n    panel.background = element_rect(fill = \"ghostwhite\", color = NA),\n    plot.background = element_rect(fill = \"ghostwhite\", color = NA),\n    plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")\n    \n      )\n    \n}\n\n# set the custom theme to apply to all plots in this document \n\ntheme_set(theme_dragons())\n```\n\n\n# wrangling\n\nHere I am deciding to look at dragons. I need to filter out dragon types that only have a single row in the data. I am making the data long and adding a new column that is the mean_score on each of the variables for each dragon type (to allow for ordering later on). \n```{r clean}\n\ndf %>%\n  tabyl(type) %>%\n  arrange(-n) %>%\n  head()\n\ndragons <- df %>%\n  filter(type == \"Dragon\") %>%\n  select(name, category, type, str:cha) \n\ndragons %>%\n  tabyl(category) %>%\n   arrange(n) %>%\n  head()\n\nsingle_dragons <- c(\"Dragon Turtle\", \"Half-Dragon\", \"Kobold\", \"Pseudodragon\", \"Wyvern\")\n\ndragons_long <- dragons %>%\n  filter(category %nin% single_dragons) %>%\n  pivot_longer(names_to = \"index\", values_to = \"score\", str:cha) %>%\n  mutate(measure = case_when(index == \"str\" ~ \"Strength\", \n                                  index == \"dex\" ~ \"Dexterity\", \n                                  index == \"con\" ~ \"Constitution\", \n                                  index == \"int\" ~ \"Intelligence\", \n                                  index == \"wis\" ~ \"Wisdom\", \n                                  index == \"cha\" ~ \"Charisma\", \n                                  ))\n\ndragons_long <- dragons_long %>%\n  group_by(category, index) %>%\n  mutate(mean_score = mean(score))\n\n```\n\n\n# make a plot\n\nI make a basic plot using just the strength scores and work out how to order the boxplots by mean strength scores (see what i learned below for alternative options I played with). \n\n```{r}\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = reorder(category, mean_score), y = score, fill = category)) +\n    geom_boxplot(alpha = 0.5) +\n    coord_flip() +\n    labs(\n      x = \"Type of dragon\",\n      y = \"Score\",\n      title = \"Dragon Strength Scores\"\n    ) +\n    easy_remove_legend()\n```\n\n\n# write a function\n\nNow to turn that code into a function. Here my function takes a dataframe and a value of the variable we are interested in (in this case index). It filters the data for that value, pulls out the value of measure (to use as a subtitle label), then plots the filtered data. \n\n\n```{r}\nplot_dragon_index <- function(data, variable) {\n  filtered_data <- data %>%\n    filter(index == variable) \n  \n  measure <- filtered_data$measure[1]\n  \n  filtered_data %>%\n    ggplot(aes(x = reorder(category, mean_score), y = score, fill = category)) +\n    geom_boxplot(alpha = 0.5) +\n    coord_flip() +\n    labs(\n      x = \"Type of dragon\",\n      y = \"Score\",\n      subtitle = paste(measure, \"Scores\")\n    ) +\n    easy_remove_legend()\n}\n```\n\n# test the function\n\n```{r}\n\nplot_dragon_index(dragons_long, \"str\")\n\n```\n\n# combine plots\n\n```{r}\n\nplot_dragon_index(dragons_long, \"str\") + plot_dragon_index(dragons_long, \"int\") +\n      plot_annotation(\n             title = \"Characteristics by Dragon Type\",\n              theme = theme(\n      plot.title = element_text(\n        hjust = 0,            # align left\n        size = 16,\n        color = \"black\",\n        margin = margin(b = 5))  # spacing below title\n    )\n  )\n\n\n```\n\n\n```{r include = FALSE}\nggsave(\"strength_intelligence.png\", width = 6, height = 4,  bg = \"white\")\n\n```\n\n```{r}\n  \nplot_dragon_index(dragons_long, \"wis\") + plot_dragon_index(dragons_long, \"cha\") +\n  plot_annotation(\n             title = \"Characteristics by Dragon Type\",\n              theme = theme(\n      plot.title = element_text(\n        hjust = 0,            # align left\n        size = 16,\n        color = \"black\",\n        margin = margin(b = 5))  # spacing below title\n    )\n  )\n\n```\n\n```{r include = FALSE}\n\nggsave(\"wisdom_charisma.png\", width = 6, height = 4,  bg = \"white\")\n\n```\n\n\n# Three things I learned... \n\n\n## 1. theme_set()\n\nYou can make a custom ggplot theme and then automatically use it for all the plots in your Quarto Document using theme_set()\n\n```{r eval=FALSE}\ntheme_set(theme_custom())\n```\n\n\n## 2. plot_annotation\n\nWhen using the `patchwork` package to combine plots you can use `plot_annotation()` to add titles etc to your combined plot. You can also use theme() functions, in much the same way you would for ggplot to control your title, margins or background. See [patchwork vignette](http://patchwork.data-imaginist.com/reference/plot_annotation.html) \n\n```{r eval = FALSE}\n\nplot1 + plot2 +\n    plot_annotation(title = \"My title\",\n              theme = \n                theme(plot.background = element_rect(fill = \"ghostwhite\"),\n                      plot.margin = margin(20, 20, 20, 20),  # T, R, B, L \n                      plot.title = element_text(hjust = 0, # align left\n                                                size = 16,  color = \"black\",  \n                      margin = margin(b = 5))  # spacing below title\n    )\n  )\n```\n\n\n## 3. how to reorder x axis in ggplot \n\n::: panel-tabset\n\n### default\n\n```{r}\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = category, y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n### factor reverse\n\n```{r}\n\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = fct_rev(category), y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n### mean score\n\n```{r}\n\ndragons_long %>% \n  filter(index == \"str\") %>%\n    ggplot(aes(x = reorder(category,mean_score), y = score)) +\n    geom_boxplot() +\n    coord_flip()\n\n```\n\n:::\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":10,"fig-height":6,"fig-format":"retina","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":"html_document","warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"fig-align":"center","engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":{"source":true,"toggle":true,"caption":"none"},"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"highlight-style":"github","embed-resources":true,"output-file":"monsters.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","knitr":{"opts_chunk":{"dev":"ragg_png","dpi":300,"fig.showtext":true,"collapse":true,"comment":"#>"}},"editor":"visual","theme":"flatly","toc-location":"right","code-summary":"Code","title":"Tidy Tuesday Week 21","subtitle":"Dungeons and Dragons Monsters","date":"today","author":"Jen Richmond"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}