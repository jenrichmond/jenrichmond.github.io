[
  {
    "objectID": "charts.html",
    "href": "charts.html",
    "title": "30daycharts",
    "section": "",
    "text": "Want to support my chart making? \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 0 challenge\n\n\n\n\n\n\nJen Richmond\n\n\nMar 31, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 1 fractions\n\n\n\n\n\n\nJen Richmond\n\n\nApr 1, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 2 slope\n\n\n\n\n\n\nJen Richmond\n\n\nApr 2, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 3 circular\n\n\n\n\n\n\nJen Richmond\n\n\nApr 3, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 4 big small\n\n\n\n\n\n\nJen Richmond\n\n\nApr 4, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 5 ranking\n\n\n\n\n\n\nJen Richmond\n\n\nApr 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 6 florence\n\n\n\n\n\n\nJen Richmond\n\n\nApr 6, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 7 outliers\n\n\n\n\n\n\nJen Richmond\n\n\nApr 7, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 9_diverging\n\n\n\n\n\n\nJen Richmond\n\n\nApr 9, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 11_stripes\n\n\n\n\n\n\nJen Richmond\n\n\nApr 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 13_clusters\n\n\n\n\n\n\nJen Richmond\n\n\nApr 13, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 16_negative\n\n\n\n\n\n\nJen Richmond\n\n\nApr 16, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 17_birds\n\n\n\n\n\n\nJen Richmond\n\n\nApr 17, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 19_smooth\n\n\n\n\n\n\nJen Richmond\n\n\nApr 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 22 stars\n\n\n\n\n\n\nJen Richmond\n\n\nApr 22, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 24 WHO\n\n\n\n\n\n\nJen Richmond\n\n\nApr 24, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 25 measles risk\n\n\n\n\n\n\nJen Richmond\n\n\nApr 25, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 27 noise\n\n\n\n\n\n\nJen Richmond\n\n\nApr 27, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 28 inclusion\n\n\n\n\n\n\nJen Richmond\n\n\nApr 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nday 30 nat geo\n\n\n\n\n\n\nJen Richmond\n\n\nApr 30, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "charts/2025-04-04_bigsmall/index.html",
    "href": "charts/2025-04-04_bigsmall/index.html",
    "title": "day 4 big small",
    "section": "",
    "text": "This plot illustrates the disproportionate amount of time that women across the world spend doing unpaid care and domestic work relative to men. Only Belgium comes anywhere near close to equal time spent by men and women.\nI am particularly interested in whether there has been any shift in this ratio in the last 20 years, so my goal is to reproduce this plot in ggplot using the most recent data for each country and then look at change over time.\n\n\n\nload packages\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(ggrepel)\nlibrary(plotly)\nlibrary(janitor)\n\n\nread in the data\n\ndom &lt;- read_csv(\"https://ourworldindata.org/grapher/time-spend-in-domestic-work-female-vs-male.csv?v=1&csvType=full&useColumnShortNames=true\") %&gt;%\n  clean_names()\n\nRows: 59211 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Entity, Code, owid_region\ndbl (4): Year, _5_4_1__sl_dom_tspd__15_years_old_and_over__all_areas__female...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nclean it up\nHere I am renaming some unweildy variable names, filtering the data to include only years since 2000, and getting rid of NA values. I then filter that dataframe to only include the most recent data year for each country.\n\ndom_clean &lt;- dom %&gt;%\n  rename(country = \"entity\", \n         female = \"x5_4_1_sl_dom_tspd_15_years_old_and_over_all_areas_female\", \n         male = \"x5_4_1_sl_dom_tspd_15_years_old_and_over_all_areas_male\") %&gt;%\n  filter(year &gt; 2000) %&gt;%\n  filter(!is.na(female)) \n\n\ndom_recent &lt;- dom_clean %&gt;%\n  group_by(country) %&gt;%\n  filter(year == max(year))\n\n\n\nplot\n\ndom_recent %&gt;%\n  ggplot(aes(x = male, y = female)) +\n  geom_point() \n\n\n\n\n\n\n\n\nBasic plot check! Things I need to change…\n\nwhite background with dotted gridlines\ncoloured points\nfix scale on axis and % labels\nadd diagonal lines\nadd labels to diagonal lines and points\nadd titles, subtitles, x and y\n\n\n\ntheme, axis, diagonal lines\ntheme_classic does a good job of getting rid of the grey background and adding dark axis lines. I add gridlines and with theme(panel.grid.major() and fix the scale on each axis by setting breaks and limits. I colour the points by country here (because the dataset is missing region information) and use easy_remove_legend() from ggeasy to hide the legend. I add diagonal lines representing equal, twice, and four times using geom_abline() with different slopes.\n\ndom_recent %&gt;%\n  ggplot(aes(x = male, y = female, colour = country)) +\n  geom_point(size = 2) +\n  theme_classic() +\n  easy_remove_legend() +\n  theme(panel.grid.major = element_line(color = \"lightgray\", linetype = 2)) +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                     expand = c(0,0), breaks = seq(0,25, 5), limits = c(0,30)) +\n   scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      expand = c(0,0), breaks = seq(0,12, 2), limits = c(0,14)) +\n  geom_abline(intercept = 0, slope = 1, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 2, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 4, colour = \"gray\", linetype = 2) \n\n\n\n\n\n\n\n\n\n\nannonations\nThe ggannotate package is super useful here. I didn’t realise that there was an angle option in the Shiny app popup that helps you place your annotation. Here I have used ggannotate to place labels on the geom_abline() lines, and geom_text_repel() to label each point with a country label.\n\n\n\n\n\n\nNote\n\n\n\nIt is SUPER fiddly to get the x, y position and angle of these labels just right and then… when you render the doc they can look slightly different to the inline output and then… when you export via ggsave they can look slight different again. I decide below it might not be worth the effort!\n\n\n\ndom_recent %&gt;%\n  ggplot(aes(x = male, y = female, colour = country)) +\n  geom_point(size = 2) +\n  theme_classic() +\n  easy_remove_legend() +\n  theme(panel.grid.major = element_line(color = \"lightgray\", linetype = 2)) +\n   scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                     expand = c(0,0), breaks = seq(0,25, 5), limits = c(0,30)) +\n   scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      expand = c(0,0), breaks = seq(0,12, 2), limits = c(0,14)) +\n  geom_abline(intercept = 0, slope = 1, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 2, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 4, colour = \"gray\", linetype = 2) +\n  \n  geom_text(data = data.frame(x = 12, y = 13, label = \"Women and men spend equal time\"), \n            mapping = aes(x = x, y = y, label = label), size = 3, angle = 16L, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 12, y = 25, label = \"Women spend 2x more time\"), \n            mapping = aes(x = x, y = y, label = label), size = 3, angle = 29L, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 6.2, y = 25.8, label = \"Women spend 4 x more time\"), \n            mapping = aes(x = x, y = y, label = label), size = 3, angle = 48L, inherit.aes = FALSE) +\n  geom_text_repel(aes(label = country), size = 2.5, max.overlaps = 10)\n\n\n\n\n\n\n\n\n\n\ntitles and captions\nAdding a title and subtitle, messed with my line annotations and I am not really sure why. I thought I had fixed the problem by adding some margin below the subtitle, making the font on the annotations smaller, and adjusting the xy position/angle of each label, but then got annoyed the that rendered angle didn’t look the same as my inline output.\nI decided that it wasn’t important for the text to sit along the line and decided to add arrows instead! I also set a seed here after realising the everytime your run the code the geom_text_repel() positions the labels slightly differently if you don’t have a seed.\n\nseed = 44\n\np &lt;- dom_recent %&gt;%\n  ggplot(aes(x = male, y = female, colour = country)) +\n  geom_point(size = 2) +\n  theme_classic() +\n  easy_remove_legend() +\n  theme(panel.grid.major = element_line(color = \"lightgray\", linetype = 2)) +\n   scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                     expand = c(0,0), breaks = seq(0,25, 5), limits = c(0,30)) +\n   scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      expand = c(0,0), breaks = seq(0,12, 2), limits = c(0,14)) +\n  geom_abline(intercept = 0, slope = 1, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 2, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 4, colour = \"gray\", linetype = 2) +\n  geom_text(data = data.frame(x = 10, y = 3.5, label = \"Women and men spend \\nequal time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 12.5, y = 28, label = \"Women spend 2x \\nmore time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5,  inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 5, y = 26.8, label = \"Women spend 4x \\nmore time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5, inherit.aes = FALSE) +\n  geom_text_repel(aes(label = country), size = 2.5, max.overlaps = 5) +\n  labs(title = \"Time women and men spend on unpaid care and domestic work, 2022\",\n       subtitle = \"The average share of each day that women and men aged 15 and older spend on unpaid care \\nand domestic work.\",\n       x = \"Men (% of 24 hour day)\", \n       y = \"Women (% of 24 hour day)\", \n       caption = \"Data source: UN Statistics Division and UN WOMEN.\nNote: Unpaid care and domestic work includes: food preparation,\ndishwashing, upkeep of a dwelling, laundry, ironing, gardening, caring\nfor pets, shopping, servicing and repair of personal and household\ngoods, childcare, and care of the sick, elderly or disabled household\nmembers, among others.\") +\n   theme(plot.caption = element_text(hjust = 0), \n         plot.subtitle = element_text(margin=margin(0,0,20,0))) +\n  geom_curve(data = data.frame(x = 5.5, y = 28.5, xend = 6.4, yend = 26),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = -0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE) +\n  geom_curve(data = data.frame(x = 11.8, y = 28, xend = 12.2, yend = 26),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE) +\n  geom_curve(data = data.frame(x = 8.8, y =4, xend = 8.2, yend = 7),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = -0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE) \np\n\n\n\n\n\n\n\n\n\n\ninteractivity\nIt is still miraculous to me that you can get an interactive plot like this in a single line of code. plotly for the win!\n\n\n\n\n\n\nNote\n\n\n\nNote I have ignored a lot of red warning messages from plotly here about how it doesn’t like geom_text_repel() or geom_curve()\n\n\n\nggplotly(p)\n\n\n\n\n\n\n\nbonus\nHow has the ratio of time that women and men spend in unpaid domestic labour changed over time? Given the theme today is big/small, I am going to choose the countries that have the biggest vs smallest discrepancy.\nI am dropping extra columns and computing a new variable that is the difference between the percent of time that women and men spend in unpaid domestic labour for each country and year. I am arranging these scores in descending order and then looking at the top 3 (head) and the bottom 3 (tail).\n\ndifference &lt;-  dom_clean %&gt;%\n  select(-code, -population_historical, -owid_region) %&gt;%\n  rowwise() %&gt;%\n  mutate(difference = female - male) %&gt;%\n  arrange(desc(difference)) \n\nhead(difference, 3)\n\n# A tibble: 3 × 5\n# Rowwise: \n  country  year female  male difference\n  &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Mexico   2009   31.0 10.4        20.7\n2 Armenia  2004   24.0  4.58       19.5\n3 Tunisia  2006   21.9  2.71       19.2\n\ntail(difference, 3)\n\n# A tibble: 3 × 5\n# Rowwise: \n  country   year female  male difference\n  &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Norway    2011  15.3  12.3        2.98\n2 Colombia  2013   4.22  2.03       2.19\n3 Belgium   2013   2.43  2.04       0.39\n\n\nI am filtering the data to only include these top and bottom countries. Unfortunately we don’t have data for several years in all of these countries, so lets plot Columbia and Mexico for illustration.\n\ntopbottom &lt;- c(\"Norway\", \"Colombia\", \"Belgium\", \"Mexico\", \"Armenia\", \"Tunisia\")\n\ntb &lt;- difference %&gt;%\n  filter(country %in% topbottom) %&gt;%\n  arrange(country, year)\n\ntb %&gt;%\n  tabyl(country)\n\n  country n    percent\n  Armenia 2 0.18181818\n  Belgium 1 0.09090909\n Colombia 3 0.27272727\n   Mexico 3 0.27272727\n   Norway 1 0.09090909\n  Tunisia 1 0.09090909\n\n\n\n\nplot\nIt is interesting that the difference in the amount of time that men and women engage in unpaid domestic labour has come down in Mexico (one of the most discrepant countries in 2009) but become more different in Colombia, who in 2013 had one of the smallest differences between men and women.\n\ntb %&gt;%\n  filter(country %in% c(\"Mexico\", \"Colombia\")) %&gt;%\n  ggplot(aes(x = year, y = difference, colour = country)) +\n  geom_point() +\ngeom_line() +\n  facet_wrap(~country) +\n  easy_remove_legend() +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                     expand = c(0,0), breaks = seq(0,25, 5), limits = c(0,25)) +\n  scale_x_continuous(breaks = seq(2009,2021, 2)) +\n  theme_classic() +\n  labs(y = \"Percent difference in women and men\", y = \"Year\")"
  },
  {
    "objectID": "charts/2025-04-01_fractions/index.html",
    "href": "charts/2025-04-01_fractions/index.html",
    "title": "day 1 fractions",
    "section": "",
    "text": "This plot from Our World in Data illustrates the proportion of people who are willing to donate 1% of their income to climate change efforts as a function of people’s estimate of how many people in their country would be willing to donate.\nAs it turns out, people have a rather dim view of the likelihood that others would commit to supporting climate action. Lets see if we can reproduce the chart using ggplot.\n\n\n\nload packages\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(ggrepel)\nlibrary(plotly)\n\n\n\nread in the data\nHere I am using the owidapi package to read in the data and reordering/renaming some variables before sorting the data by country and year.\n\nwillingness &lt;- read_csv(\"https://ourworldindata.org/grapher/willingness-climate-action.csv?v=1&csvType=full&useColumnShortNames=true\") %&gt;%\n  clean_names() %&gt;%\n  select(entity, code, owid_region, year, \n         prediction_others_willingness = willingness_contribute_1pct_climate_others, \n         self_willingness = willingness_contribute_pct_climate) %&gt;%\n   arrange(entity, year)\n\nRows: 397 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Entity, Code, owid_region\ndbl (3): Year, willingness_contribute_1pct_climate_others, willingness_contr...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(willingness)\n\nRows: 397\nColumns: 6\n$ entity                        &lt;chr&gt; \"Afghanistan\", \"Afghanistan\", \"Aland Isl…\n$ code                          &lt;chr&gt; \"AFG\", \"AFG\", \"ALA\", \"ALB\", \"ALB\", \"DZA\"…\n$ owid_region                   &lt;chr&gt; \"Asia\", NA, \"Europe\", \"Europe\", NA, \"Afr…\n$ year                          &lt;dbl&gt; 2023, 2024, 2023, 2023, 2024, 2023, 2024…\n$ prediction_others_willingness &lt;dbl&gt; NA, 40.5, NA, NA, 43.8, NA, 40.0, NA, NA…\n$ self_willingness              &lt;dbl&gt; NA, 82.0, NA, NA, 71.3, NA, 54.6, NA, NA…\n\n\n\n\nclean up the data\nLooks like the plot only includes 2024 data, so lets filter first.\n\nwillingness2024 &lt;- willingness %&gt;%\n  filter(year == 2024) \n \n\nglimpse(willingness2024)\n\nRows: 126\nColumns: 6\n$ entity                        &lt;chr&gt; \"Afghanistan\", \"Albania\", \"Algeria\", \"Ar…\n$ code                          &lt;chr&gt; \"AFG\", \"ALB\", \"DZA\", \"ARG\", \"ARM\", \"AUS\"…\n$ owid_region                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ year                          &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024…\n$ prediction_others_willingness &lt;dbl&gt; 40.5, 43.8, 40.0, 38.1, 40.7, 38.6, 37.9…\n$ self_willingness              &lt;dbl&gt; 82.0, 71.3, 54.6, 62.2, 75.4, 56.1, 72.7…\n\n\nUnfortunately in filtering out the 2023 data, I have also lost information about the owid region, which is used in colouring the dots in the plot. I need to go back to the dataset that has regions for 2023 and have them propogate into the 2024 rows as well.\nThis chunk groups the data by country and then mutates a new column to contain new region values. It looks just at 2023 rows and pulls the first value of region from those. Then we can filter for just 2024 values.\n\nwillingness2024 &lt;- willingness %&gt;%\n  group_by(entity) %&gt;%\n  mutate(region = first(owid_region[year == 2023])) %&gt;%\n  select(starts_with(\"entity\"), region, year, ends_with(\"willingness\")) %&gt;%\n  filter(year == 2024) \n \nglimpse(willingness2024)\n\nRows: 126\nColumns: 5\nGroups: entity [126]\n$ entity                        &lt;chr&gt; \"Afghanistan\", \"Albania\", \"Algeria\", \"Ar…\n$ region                        &lt;chr&gt; \"Asia\", \"Europe\", \"Africa\", \"South Ameri…\n$ year                          &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024…\n$ prediction_others_willingness &lt;dbl&gt; 40.5, 43.8, 40.0, 38.1, 40.7, 38.6, 37.9…\n$ self_willingness              &lt;dbl&gt; 82.0, 71.3, 54.6, 62.2, 75.4, 56.1, 72.7…\n\n\n\n\nmake a basic plot\n\nwillingness2024 %&gt;%\n  ggplot(aes(y =  prediction_others_willingness, x = self_willingness)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0,100)) +\n    scale_x_continuous(limits = c(0,100)) +\n  labs(y = \"Predicted share willing to give\", \n       x = \"Actual share who said they were willing to give 1% of their income\") \n\n\n\n\n\n\n\n\nOK, basic plot success… things that I need to change\n\naxis values in 20% increments with %\ntheme needs to be white background with dotted gridlines on 20% values\ndiagonal dotted line\ncolour points by region\ninclude text of selection of countries\ncaption re data source\ntitle and subtitle\nplotly interactivity\n\n\n\ngridlines and axes\nHere I am using the expand and breaks arguments within scale_y_continuous and scale_x_continuous to make the axis start at 0,0 and have 20% increments. I get % labels on each access using the percent_format() function from the scales package (accuracy = 1 tells R I want it to display whole numbers and scale = 1 tells R my numbers are already percentages and don’t need to be multiplied by 100).\nI removed the minor gridlines using easy_remove_gridlines() from the ggeasy package. I also added a diagonal line usinggeom_abline().\n\nwillingness2024 %&gt;%\n  ggplot(aes(y =  prediction_others_willingness, x = self_willingness)) +\n  geom_point() +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n    scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                       limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n  labs(y = \"Predicted share willing to give\", \n       x = \"Actual share who said they were willing to give 1% of their income\") +\n  theme_bw()  +\n  easy_remove_gridlines(axis = \"both\", minor = TRUE, major = FALSE) +\n  geom_abline(\n    slope = 1, \n    intercept = 0, \n    color = \"grey\", \n    linetype = \"dotted\")\n\n\n\n\n\n\n\n\n\n\ncolours and text\nAdding colour by region makes me realise that there is a row that entity == World, which doesn’t have a region. I need to filtered the World out to avoid an NA category.\nI want to use the same colours as the OWID plot. The ColorZilla web extension allows you to use a dropper to get the specific # codes for each colour on any plot on the internet- handy!\nI have used scale_colour_manual() to set the colours and added a title and subtitle using labs and removed the legend title using a function from the ggeasy package. I have added some country labels, while trying to avoid overlapping the point using the geom_text_repel() function from the ggrepel package. It does give me a warning that there are too many overlapping points though.\n\nwillingness2024 %&gt;%\n  filter(entity != \"World\") %&gt;%\n  ggplot(aes(y =  prediction_others_willingness, x = self_willingness, colour = region)) +\n  geom_point() +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n    scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                       limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n  labs(y = \"Predicted share willing to give\", \n       x = \"Actual share who said they were willing to give 1% of their income\", \n       title = \"People underestimate others' willingness to take climate action\", \n       subtitle = \"Participants were asked if they would contribute 1% of their income to tackle \\nclimate change. \\nThe share that answered 'yes' is shown on the horizontal axis. \\nThe share of the population in their country that people think would be willing \\nis shown on the vertical axis.\") +\n  theme_bw()  +\n  easy_remove_gridlines(axis = \"both\", minor = TRUE, major = FALSE) +\n  geom_abline(\n    slope = 1, \n    intercept = 0, \n    color = \"grey\", \n    linetype = \"dotted\") +\n  scale_colour_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#883039\")) +\n  easy_remove_legend_title() +\n  geom_text_repel(aes(label = entity), size = 3, max.overlaps = 20)\n\n\n\n\n\n\n\n\n\n\ninteractivity\nThe plotly packages allows for much of the same kind of interactivity that the grapher tool allows on Our World in Data. Here I have added an extra text argument to the ggplot aes to make the hover option display the country associated with each point, as well as the variables that were mapped. By assigning the ggplot to an object and then using the ggplotly() function, we can produce an interactive plot.\n\nplot &lt;- willingness2024 %&gt;%\n  filter(entity != \"World\") %&gt;%\n  ggplot(aes(y =  prediction_others_willingness, x = self_willingness, \n             colour = region, text = paste(\"country:\", entity))) +\n  geom_point() +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n    scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                       limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n  labs(y = \"Predicted share willing to give\", \n       x = \"Actual share who said they were willing to give 1% of their income\", \n       title = \"People underestimate others' willingness to take climate action\", \n       subtitle = \"Participants were asked if they would contribute 1% of their income to tackle climate change. \\nThe share that answered 'yes' is shown on the horizontal axis. The share of the population \\nin their country that people think would be willing is shown on the vertical axis.\") +\n  theme_bw()  +\n  theme(panel.grid.minor = element_blank()) +\n  geom_abline(\n    slope = 1, \n    intercept = 0, \n    color = \"grey\", \n    linetype = \"dotted\") +\n  scale_colour_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#883039\")) +\n  easy_remove_legend_title() \n\ninteractive_plot &lt;- ggplotly(plot)\n\ninteractive_plot"
  },
  {
    "objectID": "charts/2025-04-03_circular/index.html",
    "href": "charts/2025-04-03_circular/index.html",
    "title": "day 3 circular",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(ggannotate)\nlibrary(plotly)\n\nThis plot illustrates changing representation of women in government leadership. It is great that in 2024 fewer than 2% of governments have no women in leadership, but it is not amazing that fewer than 2% have 50% or more. I am wondering if I can look at this pattern across different areas of the world by making circular graphs in ggplot.\n\n\n\n\nI am mostly interested in the current state of affairs so I read in the data from the owidapi, filter the data to only include 2024 and rename variables to make them more friendly.\n\nshare &lt;- read_csv(\"https://ourworldindata.org/grapher/countries-by-share-of-women-in-parliament.csv?v=1&csvType=full&useColumnShortNames=true\") %&gt;%\n  clean_names()\n\n\n\nshare2024 &lt;- share %&gt;% \n  filter(year == 2024) %&gt;%\n  select(-code) %&gt;%\n  rename(number_0pct = num_countries_wom_parl_category_0pct_women, \n         number_0_10pct = num_countries_wom_parl_category_0_10pct_women,\n         number_10_20pct = num_countries_wom_parl_category_10_20pct_women, \n           number_20_30pct = num_countries_wom_parl_category_20_30pct_women, \n           number_30_40pct = num_countries_wom_parl_category_30_40pct_women, \n           number_40_50pct = num_countries_wom_parl_category_40_50pct_women,\n           number_50pluspct = num_countries_wom_parl_category_50pctplus_women) \n\nglimpse(share2024)\n\nRows: 7\nColumns: 9\n$ entity           &lt;chr&gt; \"Africa\", \"Asia\", \"Europe\", \"North America\", \"Oceania…\n$ year             &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024\n$ number_0pct      &lt;dbl&gt; 0, 2, 0, 0, 0, 0, 2\n$ number_0_10pct   &lt;dbl&gt; 4, 7, 0, 0, 4, 0, 15\n$ number_10_20pct  &lt;dbl&gt; 17, 16, 5, 1, 0, 1, 40\n$ number_20_30pct  &lt;dbl&gt; 15, 11, 11, 6, 0, 3, 46\n$ number_30_40pct  &lt;dbl&gt; 10, 5, 15, 3, 1, 5, 39\n$ number_40_50pct  &lt;dbl&gt; 5, 2, 10, 2, 1, 3, 23\n$ number_50pluspct &lt;dbl&gt; 1, 0, 0, 2, 0, 0, 3\n\n\n\n\n\nI want to plot data for the World and each region separately so create separate dataframes here using filter(). I also want to make the data long using pivot_longer, mutate new variables that represent the number of countries as percent, improve the labels on the percent categories and make them a factor so that they order correctly in my plot.\n\n# create world dataframe\n\nshare2024_world &lt;- share2024 %&gt;%\n  filter(entity == \"World\") %&gt;%\n  pivot_longer(names_to = \"category\", values_to = \"number\", number_0pct:number_50pluspct) %&gt;%\n    mutate(total = sum(number), percent = number/total) %&gt;%\n           mutate(percent_women = case_when(category == \"number_0pct\" ~ \"no women\", \n                           category == \"number_0_10pct\" ~ \"less than 10%\",\n                           category == \"number_10_20pct\" ~ \"10-20%\", \n                           category == \"number_20_30pct\" ~ \"20-30%\", \n                           category == \"number_30_40pct\" ~ \"30-40%\", \n                           category == \"number_40_50pct\" ~ \"40-50%\",\n                           category == \"number_50pluspct\" ~ \"50+%\")) %&gt;%\n    mutate(percent_women = fct_relevel(percent_women, \n                            c(\"no women\" , \"less than 10%\" ,\"10-20%\" ,\n                              \"20-30%\" ,\"30-40%\" , \"40-50%\" ,\n                              \"50+%\"))) \n\n# create regions dataframe\n\nshare2024_regions &lt;- share2024 %&gt;%\n  filter(entity != \"World\") %&gt;%\n  pivot_longer(names_to = \"category\", values_to = \"number\", number_0pct:number_50pluspct) %&gt;%\n  group_by(entity) %&gt;%\n    mutate(total = sum(number), percent = number/total) %&gt;%\n           mutate(percent_women = case_when(category == \"number_0pct\" ~ \"no women\", \n                           category == \"number_0_10pct\" ~ \"less than 10%\",\n                           category == \"number_10_20pct\" ~ \"10-20%\", \n                           category == \"number_20_30pct\" ~ \"20-30%\", \n                           category == \"number_30_40pct\" ~ \"30-40%\", \n                           category == \"number_40_50pct\" ~ \"40-50%\",\n                           category == \"number_50pluspct\" ~ \"50+%\")) %&gt;%\n    mutate(percent_women = fct_relevel(percent_women, \n                            c(\"no women\" , \"less than 10%\" ,\"10-20%\" ,\n                              \"20-30%\" ,\"30-40%\" , \"40-50%\" ,\n                              \"50+%\"))) \n\n\n\n\n\n\nStarting with world and using inspo from the R Graph gallery here I make an ugly pie chart. There is no pie geom in ggplot, so the workaround is to make a column chart and use coord_polar() to make it circular.\n\nshare2024_world %&gt;%\n  ggplot(aes(x = \"\", y = percent, fill = percent_women)) +\n  geom_col(colour = \"white\") +\n coord_polar(\"y\", start = 0) +\n    theme_void() +\n  easy_add_legend_title(\"Percent seats\") +\n  scale_fill_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#6b3d8d\",  \"#986d39\" )) +\n  labs(title = \"Percent of countries by share of women in parliament in 2024, World\", \n       subtitle = \"Percent of seats in lower or single chamber of the legislature held by women\", \n       caption = \"Data source: V-Dem (2025) via OurWorldInData. \\nNote: Only countries with at least one legislative chamber included.\")\n\n\n\n\n\n\n\n\nThe more interesting question is does this pattern of representation differ across regions?\n\n\n\n\nshare2024_regions %&gt;%\n  ggplot(aes(x = \"\", y = percent, fill = percent_women)) +\n  geom_col(colour = \"white\") +\n coord_polar(\"y\", start = 0) +\n  facet_wrap(~entity) +\n    scale_fill_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#6b3d8d\",  \"#986d39\" )) +\n    theme_void() +\n   easy_add_legend_title(\"Percent seats\") +\nlabs(title = \"Percent of countries by share of women in parliament in 2024, Regions\", \n       subtitle = \"Percent of seats in lower or single chamber of the legislature held by women\", \n       caption = \"Data source: V-Dem (2025) via OurWorldInData. \\nNote: Only countries with at least one legislative chamber included.\")\n\n\n\n\n\n\n\n\nThere is a lot that surprises me about this plot. Oceania is not doing well; the majority of countries have less than 10% of government seats held by women. This dataset only includes the number of countries in each region that have women represented in each of the percent categories. This includes 6 Oceanic countries, but it doesn’t include information about which 6 countries are included. I am interested to dig into the country level data here.\nI was also surprised that Asia is the only region that still has 2 countries that have no women in government. Again, I am curious about which 2; Afghanistan maybe? Perhaps there are Middle East countries that do not have women in government."
  },
  {
    "objectID": "charts/2025-04-03_circular/index.html#clean-it-up",
    "href": "charts/2025-04-03_circular/index.html#clean-it-up",
    "title": "day 3 circular",
    "section": "",
    "text": "I want to plot data for the World and each region separately so create separate dataframes here using filter(). I also want to make the data long using pivot_longer, mutate new variables that represent the number of countries as percent, improve the labels on the percent categories and make them a factor so that they order correctly in my plot.\n\n# create world dataframe\n\nshare2024_world &lt;- share2024 %&gt;%\n  filter(entity == \"World\") %&gt;%\n  pivot_longer(names_to = \"category\", values_to = \"number\", number_0pct:number_50pluspct) %&gt;%\n    mutate(total = sum(number), percent = number/total) %&gt;%\n           mutate(percent_women = case_when(category == \"number_0pct\" ~ \"no women\", \n                           category == \"number_0_10pct\" ~ \"less than 10%\",\n                           category == \"number_10_20pct\" ~ \"10-20%\", \n                           category == \"number_20_30pct\" ~ \"20-30%\", \n                           category == \"number_30_40pct\" ~ \"30-40%\", \n                           category == \"number_40_50pct\" ~ \"40-50%\",\n                           category == \"number_50pluspct\" ~ \"50+%\")) %&gt;%\n    mutate(percent_women = fct_relevel(percent_women, \n                            c(\"no women\" , \"less than 10%\" ,\"10-20%\" ,\n                              \"20-30%\" ,\"30-40%\" , \"40-50%\" ,\n                              \"50+%\"))) \n\n# create regions dataframe\n\nshare2024_regions &lt;- share2024 %&gt;%\n  filter(entity != \"World\") %&gt;%\n  pivot_longer(names_to = \"category\", values_to = \"number\", number_0pct:number_50pluspct) %&gt;%\n  group_by(entity) %&gt;%\n    mutate(total = sum(number), percent = number/total) %&gt;%\n           mutate(percent_women = case_when(category == \"number_0pct\" ~ \"no women\", \n                           category == \"number_0_10pct\" ~ \"less than 10%\",\n                           category == \"number_10_20pct\" ~ \"10-20%\", \n                           category == \"number_20_30pct\" ~ \"20-30%\", \n                           category == \"number_30_40pct\" ~ \"30-40%\", \n                           category == \"number_40_50pct\" ~ \"40-50%\",\n                           category == \"number_50pluspct\" ~ \"50+%\")) %&gt;%\n    mutate(percent_women = fct_relevel(percent_women, \n                            c(\"no women\" , \"less than 10%\" ,\"10-20%\" ,\n                              \"20-30%\" ,\"30-40%\" , \"40-50%\" ,\n                              \"50+%\")))"
  },
  {
    "objectID": "charts/2025-04-03_circular/index.html#plot",
    "href": "charts/2025-04-03_circular/index.html#plot",
    "title": "day 3 circular",
    "section": "",
    "text": "Starting with world and using inspo from the R Graph gallery here I make an ugly pie chart. There is no pie geom in ggplot, so the workaround is to make a column chart and use coord_polar() to make it circular.\n\nshare2024_world %&gt;%\n  ggplot(aes(x = \"\", y = percent, fill = percent_women)) +\n  geom_col(colour = \"white\") +\n coord_polar(\"y\", start = 0) +\n    theme_void() +\n  easy_add_legend_title(\"Percent seats\") +\n  scale_fill_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#6b3d8d\",  \"#986d39\" )) +\n  labs(title = \"Percent of countries by share of women in parliament in 2024, World\", \n       subtitle = \"Percent of seats in lower or single chamber of the legislature held by women\", \n       caption = \"Data source: V-Dem (2025) via OurWorldInData. \\nNote: Only countries with at least one legislative chamber included.\")\n\n\n\n\n\n\n\n\nThe more interesting question is does this pattern of representation differ across regions?\n\n\n\n\nshare2024_regions %&gt;%\n  ggplot(aes(x = \"\", y = percent, fill = percent_women)) +\n  geom_col(colour = \"white\") +\n coord_polar(\"y\", start = 0) +\n  facet_wrap(~entity) +\n    scale_fill_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#6b3d8d\",  \"#986d39\" )) +\n    theme_void() +\n   easy_add_legend_title(\"Percent seats\") +\nlabs(title = \"Percent of countries by share of women in parliament in 2024, Regions\", \n       subtitle = \"Percent of seats in lower or single chamber of the legislature held by women\", \n       caption = \"Data source: V-Dem (2025) via OurWorldInData. \\nNote: Only countries with at least one legislative chamber included.\")\n\n\n\n\n\n\n\n\nThere is a lot that surprises me about this plot. Oceania is not doing well; the majority of countries have less than 10% of government seats held by women. This dataset only includes the number of countries in each region that have women represented in each of the percent categories. This includes 6 Oceanic countries, but it doesn’t include information about which 6 countries are included. I am interested to dig into the country level data here.\nI was also surprised that Asia is the only region that still has 2 countries that have no women in government. Again, I am curious about which 2; Afghanistan maybe? Perhaps there are Middle East countries that do not have women in government."
  },
  {
    "objectID": "charts/2025-04-02_slope/index.html",
    "href": "charts/2025-04-02_slope/index.html",
    "title": "day 2 slope",
    "section": "",
    "text": "This plot from Our World in Data illustrates the amount of time that we spend with others and how that changes with age. The slope of line plotting the amount of time that people spend alone is pretty terrifying. Lets see if we can reproduce that plot using ggplot.\n\n\n\nload packages\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(ggannotate)\n\n# remotes::install_github(\"mattcowgill/ggannotate\")\n\n\n\nread in the data\nHere I am reading the data using the owidapi package and selecting and renaming columns within the same line of code. I also want to make the data long so that the category information appears in a single column and the hours values in another.\nI know that colours are often easier to deal with if we turn character variables into factors so that we can set the order. Here I use fct_relevel() to order the categories so that I can easily line up which colour is associated with each.\n\ntime &lt;- read_csv(\"https://ourworldindata.org/grapher/time-spent-with-relationships-by-age-us.csv?v=1&csvType=full&useColumnShortNames=true\") %&gt;%\n          clean_names() %&gt;%\nselect(group = entity, age = year, \n         alone = t_who_category_alone, friend = t_who_category_friend, \n         children = t_who_category_children, family = t_who_category_family, \n         partner = t_who_category_partner, coworker = t_who_category_co_worker) %&gt;%\n  pivot_longer(names_to = \"category\", values_to = \"hours\", alone:coworker)\n\nRows: 201 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Entity\ndbl (7): Year, t__who_category_alone, t__who_category_friend, t__who_categor...\nlgl (1): Code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntime$category &lt;- fct_relevel(time$category, c(\"alone\", \"partner\", \"family\", \"children\", \"friend\", \"coworker\"))\n\nlevels(time$category) #check levels\n\n[1] \"alone\"    \"partner\"  \"family\"   \"children\" \"friend\"   \"coworker\"\n\nglimpse(time)\n\nRows: 1,206\nColumns: 4\n$ group    &lt;chr&gt; \"All people\", \"All people\", \"All people\", \"All people\", \"All …\n$ age      &lt;dbl&gt; 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 1…\n$ category &lt;fct&gt; alone, friend, children, family, partner, coworker, alone, fr…\n$ hours    &lt;dbl&gt; 3.629829200, 1.584973700, 0.363883400, 4.324233500, 0.0000000…\n\n\n\n\nmake basic plot\nThe dataset contains time use data for Male and Female separate, but lets start with a plot of All people.\n\ntime %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point() + \n  geom_line() \n\n\n\n\n\n\n\n\nBasic plot… check! Here is a list of things I would like to change…\n\ntheme and colours\nadd horizontal gridlines\nfilter out data point more than 80\nstart x axis at 15, 30 then in increments of 10\ny axis add h to numbers\nadd group annotations rather than legend\n\n\n\ntheme and colours\nI started by filtering out data with age values greater than 80. I used the ColorZilla web extension to get the # codes for the colours in the Our World in Data plot and scale_colour_manual() to set the colours.\nI fixed the y axis using scale_y_continuous() breaks and got most of the way there with theme_minimal(). The easy_remove_gridlines() function from ggeasy makes it easy to control which gridlines you want to display. Here I want to remove both major and minor verticial lines but keep the major horizontal lines. I want the gridlines to be dotted and use the theme(panel.grid = element_line() to achieve that.\n\ntime %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  scale_y_continuous(expand = c(0,0), breaks = seq(0,8,1)) +\n  theme_minimal() +\n  easy_remove_gridlines(axis = \"x\", major = TRUE, minor = TRUE) +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2))\n\n\n\n\n\n\n\n\n\n\naxes\nNow theme_minimal() removes the x and y axis lines and ticks. I want to add the line/ticks back in on just the x axis so use theme(axis.line.x = element_line()and theme(axis.ticks.x = element_line().\n\ntime %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2)) +\n  theme(axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1), \n        axis.ticks.x = element_line(linewidth = 0.5, color=\"darkgrey\")\n        )\n\n\n\n\n\n\n\n\n\n\nannotations\nThe easy_remove_legend() function from the ggeasy package makes it easy to get rid of a legend; getting annotations on the end of the each line is a bit tricker. I’m sure there is a simpler way, but the ggannotate package by Matt Cowgill pulls up a shiny panel that allows you to place annotations where you want them and then copy the geom_text() code into your chunk.\n\n  time %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2)) +\n  theme(axis.ticks.x =   element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  easy_remove_legend() +\n  geom_text(data = data.frame(x = 82, y = 8, \n    label = \"Alone\"), aes(x = x, y = y, label = label), size = 3, colour = \"#496899\") +\n  geom_text(data = data.frame(x = 82, y = 4.4, \n    label = \"With \\npartner\"), aes(x = x, y = y, label = label), size = 3,colour = \"#6b3d8d\") +\n  geom_text(data = data.frame(x = 80, y = 1.3, \n    label = \"With family\"),aes(x = x, y = y, label = label), size = 3, colour = \"#2b8465\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.7, \n    label = \"With children\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#986d39\") +\n geom_text(data = data.frame(x = 83.5, y = 0.5, \n    label = \"With friends\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#b03508\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.1, \n    label = \"With coworkers\"), aes(x = x, y = y, label = label), size = 2.5, colour = \"#883039\")\n\n\n\n\n\n\n\n\n\n\ntitles and captions\nFinishing touches… title, subtitle and caption. The theme(plot.caption = element_text(hjust = 0)) makes the caption appear on the left side of the plot.\n\ntime %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth =  0.4, linetype = 2)) +\n  theme(axis.ticks.x =  element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  easy_remove_legend() +\n  ### the geom_text code below are created using the ggannotate package\n  geom_text(data = data.frame(x = 82, y = 7.8, \n    label = \"Alone\"), aes(x = x, y = y, label = label), size = 3, colour = \"#496899\") +\n  geom_text(data = data.frame(x = 82, y = 4.4, \n    label = \"With \\npartner\"), aes(x = x, y = y, label = label), size = 3,colour = \"#6b3d8d\") +\n  geom_text(data = data.frame(x = 80, y = 1.3, \n    label = \"With family\"),aes(x = x, y = y, label = label), size = 3, colour = \"#2b8465\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.7, \n    label = \"With children\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#986d39\") +\n geom_text(data = data.frame(x = 83.5, y = 0.5, \n    label = \"With friends\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#b03508\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.1, \n    label = \"With coworkers\"), aes(x = x, y = y, label = label), size = 2.5, colour = \"#883039\") +\n  labs(title = \"Who Americans spend their time with, by age, All people\", \n       subtitle = \"Measured in hours per day, based on averages from surveys in the United States \\nbetween 2010 and 2023\", \n       x = \"Age\", \n       y = \"Hours\",\n       caption = \"Data source: U.S. Bureau of Labor Statistics (2023). \\nNote: Activities such as sleeping, grooming, and personal care are not included in the data. \\nRelationships used to categorize people are not exhaustive and time spent with multiple people counts toward all \\n(e.g., attending a party with friends and partner counts toward both friends and partner)\") +\n  theme(plot.caption = element_text(hjust = 0)) # make the caption appear on the left\n\n\n\n\n\n\n\n\n\n\nbonus\nAt this point I am wondering whether who people spend their time with differs for men and women. Here I have changed the filter to include both Men and Women and added a facet_wrap(~group) to plot the gender data separately.\n\ntime %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group %in% c(\"Men\", \"Women\")) %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = .6) + \n  geom_line() +\n  facet_wrap(~ group) +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,10), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth =  0.4, linetype = 2)) +\n  theme(axis.ticks.x =  element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  labs(title = \"Who Americans spend their time with, by age, Men and Women\", \n        caption = \"Data source: U.S. Bureau of Labor Statistics (2023)\", \n              x = \"Age\", \n       y = \"Hours\") +\n    theme(plot.caption = element_text(hjust = 0)) \n\n\n\n\n\n\n\n\nIt seems that women in their later years spend more time that men alone and less time with a partner, presumably because they are living longer than the men in their lives."
  },
  {
    "objectID": "charts/2025-04-19_smooth/index.html",
    "href": "charts/2025-04-19_smooth/index.html",
    "title": "day 19_smooth",
    "section": "",
    "text": "Egg prices in the USA are high right now, mostly due to supply issues caused by bird flu outbreaks. I was interested in how prices compare to egg prices in NZ, which have been high since battery farms bans went into effect in 2022.\nThe data for these plots came from StatsNZ and the US Bureau of Labor Statistics and required a bit of wrangling to make the formats consistent. You can find the code that I wrote to read in and clean the egg data in this .R script"
  },
  {
    "objectID": "charts/2025-04-19_smooth/index.html#read-datafix-dates",
    "href": "charts/2025-04-19_smooth/index.html#read-datafix-dates",
    "title": "day 19_smooth",
    "section": "read data/fix dates",
    "text": "read data/fix dates\n\nlibrary(tidyverse)\nlibrary(here)\n\neggs &lt;- read_csv(here(\"charts\", \"2025-04-19_smooth\", \"eggsNZUSA.csv\")) \n\n\neggs &lt;- eggs %&gt;%\n    mutate(month_year = paste0(month, \"_\", year)) %&gt;%\n  mutate(date = lubridate::my(month_year))\n\nglimpse(eggs)\n\nRows: 253\nColumns: 6\n$ year       &lt;dbl&gt; 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,…\n$ month      &lt;chr&gt; \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Se…\n$ price      &lt;dbl&gt; 3.78, 3.79, 3.64, 3.71, 3.87, 3.83, 3.81, 3.77, 3.74, 3.76,…\n$ currency   &lt;chr&gt; \"NZD\", \"NZD\", \"NZD\", \"NZD\", \"NZD\", \"NZD\", \"NZD\", \"NZD\", \"NZ…\n$ month_year &lt;chr&gt; \"Jan_2015\", \"Feb_2015\", \"Mar_2015\", \"Apr_2015\", \"May_2015\",…\n$ date       &lt;date&gt; 2015-01-01, 2015-02-01, 2015-03-01, 2015-04-01, 2015-05-01…"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html",
    "href": "charts/2025-03-31_challenge/index.html",
    "title": "day 0 challenge",
    "section": "",
    "text": "I have some time on my hands at the moment and thought the #30DayChartChallenge might be a good way to refresh my ggplot skills.\nThe Our World in Data is a fun place to explore data visualisations. They always make really interesting plots out of all kinds of different data, but they use an in-house data viz platform called “Grapher” so it isn’t easy to find code that can be used to reproduce the charts.\nMy goal in April is use the 30 day chart challenge prompt to find a Our World in Data plot that looks interesting, and then to try to reproduce the plot using ggplot code.\nI will post the final code for each plot in a tabset below, but if you want to see how each chart came about (i.e. my troubleshooting process), there will be a blog post associated with each one.\nThe owidapi package is an easy way to get access to the data sources that the Our World in Data site uses.\nlibrary(owidapi)\n\ncatalog &lt;- owid_get_catalog()\n\nwillingness &lt;- owid_get(\"willingness-climate-action\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-1-fractions",
    "href": "charts/2025-03-31_challenge/index.html#day-1-fractions",
    "title": "day 0 challenge",
    "section": "Day 1 fractions",
    "text": "Day 1 fractions\nWillingness climate action\n\nmy plotr code\n\n\n\n\n\n\nwillingness2024 %&gt;%\n  filter(entity_name != \"World\") %&gt;%\n  ggplot(aes(y =  prediction_others_willingness, x = self_willingness, colour = region)) +\n  geom_point() +\n  scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n    scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                       limits = c(0,100), expand = c(0,0), breaks = seq(0,100,20)) +\n  labs(y = \"Predicted share willing to give\", \n       x = \"Actual share who said they were willing to give 1% of their income\", \n       title = \"People underestimate others' willingness to take climate action\", \n       subtitle = \"Participants were asked if they would contribute 1% of their income to tackle \\nclimate change. \\nThe share that answered 'yes' is shown on the horizontal axis. \\nThe share of the population in their country that people think would be willing \\nis shown on the vertical axis.\") +\n  theme_bw()  +\n  easy_remove_gridlines(axis = \"both\", minor = TRUE, major = FALSE) +\n  geom_abline(\n    slope = 1, \n    intercept = 0, \n    color = \"grey\", \n    linetype = \"dotted\") +\n  scale_colour_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#883039\")) +\n  easy_remove_legend_title() +\n  geom_text_repel(aes(label = entity_name), size = 3, max.overlaps = 20)"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-2-slope",
    "href": "charts/2025-03-31_challenge/index.html#day-2-slope",
    "title": "day 0 challenge",
    "section": "Day 2 slope",
    "text": "Day 2 slope\nTime spent alone\n\nmy plotr code\n\n\n\n\n\n\ntime %&gt;%\n  filter(age &lt; 80) %&gt;%\n  filter(group == \"All people\") %&gt;%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth =  0.4, linetype = 2)) +\n  theme(axis.ticks.x =  element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  easy_remove_legend() +\n  ### the geom_text code below are created using the ggannotate package\n  geom_text(data = data.frame(x = 82, y = 7.8, \n    label = \"Alone\"), aes(x = x, y = y, label = label), size = 3, colour = \"#496899\") +\n  geom_text(data = data.frame(x = 82, y = 4.4, \n    label = \"With \\npartner\"), aes(x = x, y = y, label = label), size = 3,colour = \"#6b3d8d\") +\n  geom_text(data = data.frame(x = 80, y = 1.3, \n    label = \"With family\"),aes(x = x, y = y, label = label), size = 3, colour = \"#2b8465\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.7, \n    label = \"With children\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#986d39\") +\n geom_text(data = data.frame(x = 83.5, y = 0.5, \n    label = \"With friends\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#b03508\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.1, \n    label = \"With coworkers\"), aes(x = x, y = y, label = label), size = 2.5, colour = \"#883039\") +\n  labs(title = \"Who Americans spend their time with, by age, All people\", \n       subtitle = \"Measured in hours per day, based on averages from surveys in the United States \\nbetween 2010 and 2023\", \n       x = \"Age\", \n       y = \"Hours\",\n       caption = \"Data source: U.S. Bureau of Labor Statistics (2023). \\nNote: Activities such as sleeping, grooming, and personal care are not included in the data. \\nRelationships used to categorize people are not exhaustive and time spent with multiple people counts toward all \\n(e.g., attending a party with friends and partner counts toward both friends and partner)\") +\n  theme(plot.caption = element_text(hjust = 0)) # make the caption appear on the left"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-3-circular",
    "href": "charts/2025-03-31_challenge/index.html#day-3-circular",
    "title": "day 0 challenge",
    "section": "Day 3 circular",
    "text": "Day 3 circular\nWomen in government\n\nmy plotr code\n\n\n\n\n\n\nshare2024_regions %&gt;%\n  ggplot(aes(x = \"\", y = percent, fill = percent_women)) +\n  geom_col(colour = \"white\") +\n coord_polar(\"y\", start = 0) +\n  facet_wrap(~entity_name) +\n    scale_fill_manual(values = c(\"#a2559b\", \"#00847d\", \"#4b6a9c\", \"#e56e59\", \"#38aaba\", \"#6b3d8d\",  \"#986d39\" )) +\n    theme_void() +\n   easy_add_legend_title(\"Percent seats\") +\nlabs(title = \"Percent of countries by share of women in parliament in 2024, Regions\", \n       subtitle = \"Percent of seats in lower or single chamber of the legislature held by women\", \n       caption = \"Data source: V-Dem (2025) via OurWorldInData. \\nNote: Only countries with at least one legislative chamber included.\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-4-big-small",
    "href": "charts/2025-03-31_challenge/index.html#day-4-big-small",
    "title": "day 0 challenge",
    "section": "Day 4 big small",
    "text": "Day 4 big small\nTime spent in unpaid work\n\nmy plotr code\n\n\n\n\n\n\ndom_recent %&gt;%\n  ggplot(aes(x = male, y = female, colour = country)) +\n  geom_point(size = 2) +\n  theme_classic() +\n  easy_remove_legend() +\n  theme(panel.grid.major = element_line(color = \"lightgray\", linetype = 2)) +\n   scale_y_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                     expand = c(0,0), breaks = seq(0,25, 5), limits = c(0,30)) +\n   scale_x_continuous(labels = percent_format(accuracy = 1, scale = 1), \n                      expand = c(0,0), breaks = seq(0,12, 2), limits = c(0,14)) +\n  geom_abline(intercept = 0, slope = 1, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 2, colour = \"gray\", linetype = 2) +\n  geom_abline(intercept = 0, slope = 4, colour = \"gray\", linetype = 2) +\n  geom_text(data = data.frame(x = 10, y = 3.5, label = \"Women and men spend \\nequal time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 12.5, y = 28, label = \"Women spend 2x \\nmore time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5,  inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 5, y = 26.8, label = \"Women spend 4x \\nmore time\"), \n            mapping = aes(x = x, y = y, label = label), size = 2.5, inherit.aes = FALSE) +\n  geom_text_repel(aes(label = country), size = 2.5, max.overlaps = 5) +\n  labs(title = \"Time women and men spend on unpaid care and domestic work, 2022\",\n       subtitle = \"The average share of each day that women and men aged 15 and older spend on unpaid care \\nand domestic work.\",\n       x = \"Men (% of 24 hour day)\", \n       y = \"Women (% of 24 hour day)\", \n       caption = \"Data source: UN Statistics Division and UN WOMEN.\nNote: Unpaid care and domestic work includes: food preparation,\ndishwashing, upkeep of a dwelling, laundry, ironing, gardening, caring\nfor pets, shopping, servicing and repair of personal and household\ngoods, childcare, and care of the sick, elderly or disabled household\nmembers, among others.\") +\n   theme(plot.caption = element_text(hjust = 0), \n         plot.subtitle = element_text(margin=margin(0,0,20,0))) +\n  geom_curve(data = data.frame(x = 5.5, y = 28.5, xend = 6.4, yend = 26),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = -0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE) +\n  geom_curve(data = data.frame(x = 11.8, y = 28, xend = 12.2, yend = 26),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = 0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE) +\n  geom_curve(data = data.frame(x = 8.8, y =4, xend = 8.2, yend = 7),\n          mapping = aes(x = x, y = y, xend = xend, yend = yend), curvature = -0.515, \n          arrow = arrow(20L, unit(0.1, \"inches\"), \"last\", \"closed\"), alpha = 1, inherit.aes = FALSE)"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-5-ranking",
    "href": "charts/2025-03-31_challenge/index.html#day-5-ranking",
    "title": "day 0 challenge",
    "section": "Day 5 ranking",
    "text": "Day 5 ranking\n\nR&Dspending\nR&Dresearchers\n\n\nmy plotr code\n\n\n\n\n\n\ntop5spend %&gt;%\nggplot(aes(year, rank, color = country)) +\n  geom_point(size = 5) +\n   geom_bump(size = 2, smooth = 8) +\n  scale_colour_manual(values = palette_takehe_plus) +\n  geom_text(data = top5spend %&gt;% filter(year == min(year)),\n            aes(x = year - .1, label = country), size = 3.5, hjust = 1) +\n  geom_text(data = top5spend %&gt;% filter(year == max(year)),\n            aes(x = year + .1, label = country), size = 3.5, hjust = 0) +\n    scale_y_reverse() +\n  scale_x_continuous(limits = c(2017.6, 2021.5),\n                     breaks = seq(2018, 2021, 1)) +\n  theme_minimal() +\n  easy_remove_legend() +\n  easy_remove_gridlines() +\n  labs(title = \"R&D spending percent of GDP: Top 5 countries\", \n       subtitle = \"includes basic research, applied research, and experimental development\", \n       y = \"Ranking\", x = \"Year\") +\n  geom_text(data = data.frame(x = 2019, y = 4.7, label = \"Switzerland\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 3.7, colour = \"#D1C7B5\", inherit.aes = FALSE)"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-6-florence",
    "href": "charts/2025-03-31_challenge/index.html#day-6-florence",
    "title": "day 0 challenge",
    "section": "Day 6 florence",
    "text": "Day 6 florence\nWillingness to get the COVID vaccine\n\nmy plotr code\n\n\n\n\n\n\nus_oz %&gt;%\n  ggplot(aes(x = month, y = percent, fill = status)) +\n  geom_col() +\n  scale_fill_manual(values = palette) +\n  coord_polar() +\n  facet_wrap(~country) +\n  easy_remove_axes(which = \"y\") +\n  theme(panel.background = element_rect(fill = 'white', colour = 'white')) +\n  easy_move_legend(to = \"bottom\") +\n  labs(title = \"Willingness to get vaccinated against COVID-19, Mar 15, 2021 to Oct 15, 2021\") +\n  easy_remove_axes(which = \"x\", what = \"title\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-7-outliers",
    "href": "charts/2025-03-31_challenge/index.html#day-7-outliers",
    "title": "day 0 challenge",
    "section": "Day 7 outliers",
    "text": "Day 7 outliers\nSex ratio outliers\n\nmy plotr code\n\n\n\n\n\n\nratio4 %&gt;%\n  ggplot(aes(x = year, y = ratio, colour = country)) +\n  geom_point() +\n  geom_line() +\n  theme_classic() +\nscale_colour_manual(values = get_pal(\"eastern_rosella\")) +\n  scale_y_continuous(expand = c(0,0), limits = c(98, 120)) +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  geom_hline(yintercept = 100, linetype = 2) +\n  geom_text(data = data.frame(x = 2005, y = 100.8, label = \"Equal numbers of newborn boys and girls\"), mapping = aes(x = x, y = y, label = label), size = 3, inherit.aes = FALSE) +\n  labs(y = \"Sex ratio\", x = \"Year\", \n       title = \"Sex ratio at birth, 1950 to 2023\", \n       subtitle = \"The sex ratio at birth is measured as the number of newborn \\nboys for every 100 newborn girls. Higher values indicate a much \\nhigher number of newborn boys than girls.\", \n       caption = \"Data source: UN, World Population Prospects (2024). \\nNote: It's considered that 105 is the biologically expected sex ratio at birth.\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-9-diverging",
    "href": "charts/2025-03-31_challenge/index.html#day-9-diverging",
    "title": "day 0 challenge",
    "section": "Day 9 diverging",
    "text": "Day 9 diverging\nFamily and work\n\nmy plotr code\n\n\n\n\n\n\nwork_family %&gt;%\n  ggplot(aes(x = year, y = important, colour = life_area)) +\n  geom_point(size = 2) +\n  geom_line() +\n  facet_wrap(~ country) +\n  labs(title = \"How important family and work are to people in life\", \n       subtitle = \"Share of survey respondents rating `very important` or `rather important`\", \n       x = \"Year\", y = \"Percent of people\", \n       caption = \"Data source: Integrated Values Surveys (2022)\") +\n  theme_minimal() +\n  scale_y_continuous(limits = c(70,100)) +\n  scale_x_continuous(limits = c(1990, 2022)) +\n  scale_color_brewer(palette = \"Set1\") +\n  easy_add_legend_title(\"Life Area\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-11-stripes",
    "href": "charts/2025-03-31_challenge/index.html#day-11-stripes",
    "title": "day 0 challenge",
    "section": "Day 11 stripes",
    "text": "Day 11 stripes\nwarming stripes\n\nmy plotr code\n\n\n\n\n\n\nmaxmin &lt;- range(qmean$annual, na.rm = T)\nmd &lt;- mean(qmean$annual, na.rm = T)\n\n\nqmean %&gt;%\n    ggplot(aes(x = date, y = 1, fill = annual)) +\n  geom_tile() +\n  scale_fill_gradientn(colors = rev(col_strip), \n                       values = scales::rescale(c(maxmin[1], md, maxmin[2])), \n                       na.value = \"gray80\") +\n  scale_x_continuous(limits = c(1972, 2022), expand = c(0,0), breaks = seq(1972,2022, 10)) +\n  labs(\n    title = \"Queenstown 1972-2022\",\n    caption = \"Data: Stats NZ\", \n    x = \"Year\") +\n  coord_cartesian(expand = FALSE) +\n  theme_strip() +\n  easy_remove_axes(which = \"x\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-13-clusters",
    "href": "charts/2025-03-31_challenge/index.html#day-13-clusters",
    "title": "day 0 challenge",
    "section": "Day 13 clusters",
    "text": "Day 13 clusters\n\nmy plotr code\n\n\n\n\n\n\nlibrary(factoextra)\n\nfviz_cluster(km_bodymass_bill, data = bodymass_bill, \n             show.clust.cent = FALSE, label=NA) +\n  theme_bw() +\n  labs(title = \"Cluster plot k-means penguin classification\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-16-negative",
    "href": "charts/2025-03-31_challenge/index.html#day-16-negative",
    "title": "day 0 challenge",
    "section": "Day 16 negative",
    "text": "Day 16 negative\nIs your country going in the right direction?\n\nmy plotr code\n\n\n\n\n\n\nright_wrong_long_new %&gt;%\n  filter(country != \"France\") %&gt;%\n  ggplot(aes(x = country, y = percent, fill = track)) +\n  scale_fill_manual(values = palette, name = \"Direction\", labels = c(\"Wrong\", \"Right\")) +\n  geom_col() +\n  coord_flip() +\n  theme_minimal() +\n  easy_remove_gridlines() +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(y = \"Country\", x = \"Percent of people\", \n       title = \"Percent of the public who rate their country as heading in \\nright direction vs the wrong direction\", \n       caption = \"Source: Ipsos: What Worries The World? March 2025 • \\nBase: Representative sample of 25,746 adults aged 16-74 in 29 participating countries, \\nFebruary 21 2025 - March 7 2025.\") +\n  guides(fill = guide_legend(reverse = TRUE))"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-17-birds",
    "href": "charts/2025-03-31_challenge/index.html#day-17-birds",
    "title": "day 0 challenge",
    "section": "Day 17 birds",
    "text": "Day 17 birds\nPuteketeke2023: A scrollytelling story\n\nmy plotr code\n\n\n\n\n\n\nd23 %&gt;%\n  ggplot(aes(x = rank_number, y = votes, fill = maori_name)) +\n   geom_col() +\n  scale_x_continuous(breaks = seq(1,10, 1)) +\n     scale_y_continuous(limits = c(0,350000)) +\n  labs(y = \"Number #1 Votes\", x = \"Rank\", title = \"Bird of the Century 2023\", subtitle= \"Winner = Pūteketeke / Australasian crested grebe\",\n       caption = \"Note: some argue that the 2023 results were impacted by foreign election interference\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Paired\", name = \"Maori name\")\n\n\np23 + geom_image(\n    data = tibble(rank_number = 1, votes = 320000, maori_name = \"Pūteketeke\"),\n    aes(image = here::here(\"charts\", \"2025-04-17_birds\", \"img\", \"grebe.jpg\")), size = 0.15)"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-19-smooth",
    "href": "charts/2025-03-31_challenge/index.html#day-19-smooth",
    "title": "day 0 challenge",
    "section": "Day 19 smooth",
    "text": "Day 19 smooth\n\nmy plotr code\n\n\n\n\n\n\neggs %&gt;%\n  ggplot(aes(x = date, y = price, colour = currency)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(se = FALSE, na.rm = TRUE) +\n  scale_colour_brewer(palette = \"Dark2\", name = \"Country\", labels = c(\"NZ\", \"USA\")) +\n  theme_minimal() +\n  labs(y = \"Price per dozen ($)\", x = \"Year\", \n       title = \"Egg prices (per dozen) over time\", \n       caption = \"NZ Data from StatsNZ; \\nUS Data from Bureau of Labor Statistics\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-22-stars",
    "href": "charts/2025-03-31_challenge/index.html#day-22-stars",
    "title": "day 0 challenge",
    "section": "Day 22 stars",
    "text": "Day 22 stars\nHollywood age differences\n\nmy plotr code\n\n\n\n\n\n\nage_diff_decade %&gt;%\n  filter(release_year &gt;= 1980) %&gt;%\n  ggplot(aes(x = decade, y = age_difference, fill = decade)) +\n geom_rain(alpha = .5, \n            boxplot.args.pos = list(\n              width = .1, position = position_nudge(x = 0.2)),\n            violin.args.pos = list(\n              side = \"r\",\n              width = 0.7, position = position_nudge(x = 0.3))) +\n  theme_minimal() +\n  easy_remove_legend() +\n    scale_y_continuous(expand = c(0,0), limits = c(-.2, 55)) +\n  labs(y = \"Age difference\", x = \"Decade\",  subtitle = \"1980s - current\")"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-24-who",
    "href": "charts/2025-03-31_challenge/index.html#day-24-who",
    "title": "day 0 challenge",
    "section": "Day 24 WHO",
    "text": "Day 24 WHO\nGlobal Hepatitis Report 2024\n\nmy plotr code\n\n\n\n\n\n\nhepB &lt;- hep %&gt;% \n  ggplot(aes(area = new_hepB, fill = WHO_region, layout = \"fixed\",\n             label = paste(WHO_region, new_hepB, sep = \"\\n\"))) +\n  geom_treemap(colour = \"white\") +\n  scale_fill_manual(values = palette) +\n  geom_treemap_text(colour = \"black\",\n                    place = \"topleft\",\n                    size = 5, \n                    grow = FALSE) + # option from ggfittext to NOT make font fit box\n  easy_remove_legend() +\nlabs(title = \"&lt;span style='color:#F4BD4B;'&gt;Figure 2.4&lt;/span&gt;&lt;span&gt; Number of new hepatitis B and hepatitis C infections, by WHO region, 2022&lt;/span&gt;\", \n     subtitle = \"Hepatitis B\") +\n  theme(plot.subtitle = element_text(hjust = 0.5, size = 5), \n        plot.title = element_markdown(hjust = 0, size = 8, face = \"bold\"))\n\n hepC &lt;- hep %&gt;% \n  ggplot(aes(area = new_hepC, fill = WHO_region, layout = \"fixed\",\n             label = paste(WHO_region, new_hepC, sep = \"\\n\"))) +\n  geom_treemap(colour = \"white\") +\n  scale_fill_manual(values = palette) +\n  geom_treemap_text(colour = \"black\",\n                    place = \"topleft\",\n                    size = 5, \n                    grow = FALSE) + # option from ggfittext to NOT make font fit box\n  easy_remove_legend() +\n  labs(subtitle = \"Hepatitis C\") +\n   theme(plot.subtitle = element_text(hjust = 0.5, size = 5))\n\n \n hepB  + hepC"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-25-risk",
    "href": "charts/2025-03-31_challenge/index.html#day-25-risk",
    "title": "day 0 challenge",
    "section": "Day 25 risk",
    "text": "Day 25 risk\nCDC measles data\n\nmy plotr code\n\n\n\n\n\n\nplot_usmap(data = cases2425, values = \"cases_calendar_year\", labels=FALSE) +\n  scale_fill_continuous(low = \"white\", high = \"red\", \n                         name = \"cases\", \n                        limits = c(0,600)) +\n  labs(title = \"USA Measles cases by state\", subtitle = \"Data as of April 17, 2025\", caption = \"Data from CDC \\nhttps://www.cdc.gov/measles/data-research/index.html\") +\n  facet_wrap(~ year) +\n  theme(\n    legend.position = \"bottom\",\n    strip.background = element_blank(),\n    strip.text = element_text(color = \"black\", size = 10)\n  )"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-27-noise",
    "href": "charts/2025-03-31_challenge/index.html#day-27-noise",
    "title": "day 0 challenge",
    "section": "Day 27 noise",
    "text": "Day 27 noise\nSuper Bowl Sunday noise\n\nmy plotr code\n\n\n\n\n\n\nsb %&gt;%\n  ggplot(aes(x = hours_to_game_begin, y = avg_leq, \n             colour = super_bowl_sunday, linetype = super_bowl_sunday)) +\n  geom_line() +\n  facet_grid(year~game_zone) +\n  theme_minimal() +\n   easy_remove_gridlines(axis = c(\"x\")) +\n    scale_colour_manual(values = c(\"black\", \"red\")) +\n   scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  easy_remove_legend() +\n  annotate(\"rect\", xmin = 0, xmax = 3.5, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = \"darkgrey\") +\n    scale_x_continuous(limits = c(-6, 9), breaks= seq(-6, 9, 3)) +\n   scale_y_continuous(breaks= seq(50, 70, 10)) +\n  labs(title = \"Super Bowl Sunday noise exposure in decibels\", x = \"Hours from start of Super Bowl\", y = \"Average noise exposure (in decibels)\", caption = \"Data from Apple Hearing Study\") +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  theme(panel.spacing = unit(1, \"lines\"))"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-28-inclusion",
    "href": "charts/2025-03-31_challenge/index.html#day-28-inclusion",
    "title": "day 0 challenge",
    "section": "Day 28 inclusion",
    "text": "Day 28 inclusion\n\nmy plotr code\n\n\n\n\n\n\n# insert ggplot code"
  },
  {
    "objectID": "charts/2025-03-31_challenge/index.html#day-30-national-geographic",
    "href": "charts/2025-03-31_challenge/index.html#day-30-national-geographic",
    "title": "day 0 challenge",
    "section": "Day 30 national geographic",
    "text": "Day 30 national geographic\n\nmy plotr code\n\n\n\n\n\n\n# insert ggplot code"
  },
  {
    "objectID": "charts/2025-04-06_florence/index.html",
    "href": "charts/2025-04-06_florence/index.html",
    "title": "day 6 florence",
    "section": "",
    "text": "I did not know that Florence Nightingale was also a data visualisation revolutionary, in addition to being a nurse and scientist. She realised that visualisations are important for telling data stories and her rose diagrams convinced Queen Victoria of the impact of sanitation on health for soldiers.\nThe Day 6 theme is Florence Nightingale, so I am on a mission to find an appropriate dataset.\n\n\n\nRose diagram by Florence Nightengale\n\n\nThis plot comparing the proportion of people willing to get the COVID vaccine in Australia and the USA illustrates how differences in public health policy can impact vaccine uptake.\nIt is interesting that across this period the proportion of people who were unvaccinated and unwilling remained pretty constant in the USA, whereas this proportion became smaller and smaller in Australia, as campaigns encouraging people to get vaccinated were rolled out.\nThe vaccination data seems like a good candidate for a rose diagram.\n\n\n\nload packages\n\nlibrary(tidyverse)\nlibrary(owidapi)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(janitor)\n\n\nread in the data\nHere I am reading the data from Our World in Data and selecting/renaming variables.\n\nvax &lt;- read_csv(\"https://ourworldindata.org/grapher/covid-vaccine-willingness-and-people-vaccinated-by-month.csv?v=1&csvType=full&useColumnShortNames=true\") %&gt;%\n  clean_names() %&gt;%\n  select(country = entity, date = day, unvax_unwilling = unwillingness_covid_vaccinate_this_week_pct_pop, \n         unvax_uncertain =  uncertain_covid_vaccinate_this_week_pct_pop , unvax_willing =  willingness_covid_vaccinate_this_week_pct_pop , vaccinated =  people_vaccinated_per_hundred ) \n\n\n\nclean it up\nI am interested in the comparison between Australia and the US so filter for those two countries and then make the data long, so that the percent values appear in one column, and the status categories in another. I make the status column a factor and pull the month out of the date variable.\n\nvax_long &lt;- vax %&gt;%\n  filter(country %in% c(\"Australia\", \"United States\")) %&gt;%\n  pivot_longer(names_to = \"status\", values_to = \"percent\", unvax_unwilling:vaccinated) %&gt;%\n  mutate(status = as_factor(status)) %&gt;%\n  mutate(month = month(date, label=TRUE))\n\nglimpse(vax_long)\n\nRows: 84\nColumns: 5\n$ country &lt;chr&gt; \"Australia\", \"Australia\", \"Australia\", \"Australia\", \"Australia…\n$ date    &lt;date&gt; 2021-03-15, 2021-03-15, 2021-03-15, 2021-03-15, 2021-04-15, 2…\n$ status  &lt;fct&gt; unvax_unwilling, unvax_uncertain, unvax_willing, vaccinated, u…\n$ percent &lt;dbl&gt; 27.72, 19.80, 51.77, 0.71, 31.32, 20.13, 43.73, 4.82, 31.14, 2…\n$ month   &lt;ord&gt; Mar, Mar, Mar, Mar, Apr, Apr, Apr, Apr, May, May, May, May, Ju…\n\n\n\n\nplot\n\njust Australia\nOK I am going to start by plotting Australia first and getting column graph, before adding the coord_polar() below. I want the plot to start with the March data, so relevel month as a factor.\n\noz &lt;- vax_long %&gt;%\n  filter(country == \"Australia\") \n\noz$month &lt;- fct_relevel(oz$month, \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n                              \"Sep\", \"Oct\", \"Nov\", \"Dec\")\n\nlevels(oz$month)\n\n [1] \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\" \"Jan\" \"Feb\"\n\npalette &lt;- c(\"#c5001f\",\"#f6b79b\", \"#a8d0e4\", \"#498dc0\" )\n\noz %&gt;%\n  ggplot(aes(x = month, y = percent, fill = status)) +\n  geom_col() +\n  scale_fill_manual(values = palette)\n\n\n\n\n\n\n\n\nAdding coord_polar() to turn it into a Florence Nightengale plot. Here I have removed the y axis, made the background white and moved the legend to the bottom.\n\noz %&gt;%\n  ggplot(aes(x = month, y = percent, fill = status)) +\n  geom_col() +\n  scale_fill_manual(values = palette) +\n  coord_polar() +\n  easy_remove_axes(which = \"y\") +\n  theme(panel.background = element_rect(fill = 'white', colour = 'white')) +\n  easy_move_legend(to = \"bottom\") \n\n\n\n\n\n\n\n\n\n\nboth Australia and USA\nNow I want to use facet_wrap() to get a plot that compares this pattern for the US and Australia. In looking at the data, the USA data only goes until Oct, so I am filtering so that I have the same months represented for each country.\n\nmonths &lt;- c(\"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n                              \"Sep\", \"Oct\")\n\nus_oz &lt;- vax_long %&gt;%\n  filter(month %in% months)\n\n\nus_oz %&gt;%\n  ggplot(aes(x = month, y = percent, fill = status)) +\n  geom_col() +\n  scale_fill_manual(values = palette) +\n  coord_polar() +\n  facet_wrap(~country) +\n  easy_remove_axes(which = \"y\") +\n  theme(panel.background = element_rect(fill = 'white', colour = 'white')) +\n  easy_move_legend(to = \"bottom\") +\n  labs(title = \"Willingness to get vaccinated against COVID-19\", \n       subtitle = \"Mar 15, 2021 to Oct 15, 2021\") +\n  easy_remove_axes(which = \"x\", what = \"title\")\n\n\n\n\n\n\n\n\nSuccess- this style of plot really nicely illustrates the lack change in willingness to get the COVID vaccine across this period in the US."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "blog",
    "section": "",
    "text": "Want to support my blog? \n\n\n\n\n\n\n\n\n\n\n\n\nPūteketeke Pandemonium\n\n\n\n\n\n\nJen Richmond\n\n\nApr 20, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlearning python\n\n\n\npython\n\n\n\n\n\n\n\nJen Richmond\n\n\nJul 4, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrowwise %&gt;% mean\n\n\n\ndata wrangling\n\n\n\n\n\n\n\nJen Richmond\n\n\nMay 24, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nerror bars on plots\n\n\n\nidhgt\n\n\nggplot\n\n\n\n\n\n\n\nJen Richmond\n\n\nApr 25, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncolours that R knows\n\n\n\nggplot\n\n\n\n\n\n\n\nJen Richmond\n\n\nDec 14, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngit hints\n\n\n\n\n\n\nJen Richmond\n\n\nSep 28, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nanalysing smartwatch data\n\n\n\n\n\n\nJen Richmond\n\n\nJul 13, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nusing lists in R\n\n\n\n\n\n\nJen Richmond\n\n\nJun 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmy favourite things about R\n\n\n\n\n\n\nJen Richmond\n\n\nJan 17, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nuseful bash commands\n\n\n\n\n\n\nJen Richmond\n\n\nJan 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nparameterised penguins\n\n\n\n\n\n\nJen Richmond\n\n\nAug 31, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPAT for GitHub\n\n\n\n\n\n\nJen Richmond\n\n\nJun 22, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncleaning penguins with the janitor package\n\n\n\n\n\n\nJen Richmond\n\n\nNov 18, 2020\n\n\n\n\n\n\n\n\nNo matching items"
  }
]