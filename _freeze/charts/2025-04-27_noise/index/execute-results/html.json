{
  "hash": "c4c8abd97db987f052937d8752bf1deb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"day 27 noise\"\nauthor:\n  - name: Jen Richmond\n    url: https://jenrichmond.github.io/\ndate: 2025-04-27\nformat: html\neditor: source\nimage: featured.png\n\n---\n\n\n\n\n\nThe Day 27 prompt is noise and I am interested in finding some data illustrating how noise pollution might impact our health. It was a bit hard to find interesting plots that had open data for this theme, but this Super Bowl noise data from [Apple Hearing Study](https://sph.umich.edu/applehearingstudy/study-updates/super-bowl-noise.html) was available on [Github](https://github.com/Yingt2023/Super-Bowl). \n\nI think the plots in this [writeup](https://sph.umich.edu/applehearingstudy/study-updates/super-bowl-noise.html) are interesting, both because it seems that game days (red line) are noisier than regular Sundays (dotted black) and that the magnitude of that difference is bigger in game states. Also if you tab across these panels, it seems that games are getting noisier over this period. \n\nThat said, I really dislike the way the authors have messed with the y axis scale here. It is possible that there has been some smoothing going on too. Lets see what this data looks like without that manipulation. \n\n# Superbowl plots\n\n::: panel-tabset\n\n### 2021\n\n![](https://sph.umich.edu/applehearingstudy/study-updates/images/SuperBowl_2021_v3.jpg)\n\n\n### 2022\n\n![](https://sph.umich.edu/applehearingstudy/study-updates/images/SuperBowl_2022_v3.jpg)\n\n\n### 2023\n\n![](https://sph.umich.edu/applehearingstudy/study-updates/images/SuperBowl_2023_v3.jpg)\n\n### 2024\n\n![](https://sph.umich.edu/applehearingstudy/study-updates/images/SuperBowl_2024_v3.jpg)\n\n:::\n\n\n\n## read in data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggeasy)\nlibrary(ggannotate)\n\nsb21 <- read_csv(\"https://raw.githubusercontent.com/Yingt2023/Super-Bowl/refs/heads/main/SuperBowl_2021.csv\") %>%\n  clean_names() %>%\n  mutate(year = \"2021\")\n\nsb22 <- read_csv(\"https://raw.githubusercontent.com/Yingt2023/Super-Bowl/refs/heads/main/SuperBowl_2022.csv\") %>%\n   clean_names() %>%\n  mutate(year = \"2022\")\n\nsb23 <- read_csv(\"https://raw.githubusercontent.com/Yingt2023/Super-Bowl/refs/heads/main/SuperBowl_2023.csv\") %>%\n   clean_names() %>%\n  mutate(year = \"2023\")\n\nsb24 <- read_csv(\"https://raw.githubusercontent.com/Yingt2023/Super-Bowl/refs/heads/main/SuperBowl_2024.csv\") %>%\n   clean_names() %>%\n  mutate(year = \"2024\")\n\nsb <- rbind(sb21, sb22, sb23, sb24) %>%\n  select(year, super_bowl_sunday, game_zone, hours_to_game_begin, avg_leq)\n\nglimpse(sb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 512\nColumns: 5\n$ year                <chr> \"2021\", \"2021\", \"2021\", \"2021\", \"2021\", \"2021\", \"2…\n$ super_bowl_sunday   <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"No\"…\n$ game_zone           <chr> \"Non-game States\", \"Non-game States\", \"Non-game St…\n$ hours_to_game_begin <dbl> -1.5, 6.5, 2.5, 0.5, 0.5, 6.0, -3.0, 4.5, 3.5, 2.0…\n$ avg_leq             <dbl> 66.11693, 54.07987, 65.76910, 65.91371, 67.20883, …\n```\n\n\n:::\n:::\n\n\n\n### make plot \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsb %>%\n  ggplot(aes(x = hours_to_game_begin, y = avg_leq, colour = super_bowl_sunday)) +\n  geom_line() +\n  facet_grid(year~game_zone)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nBasic plot check! Things I would like to change...\n\n- theme and gridlines\n- colours and linetype\n- scale (is it possible to reproduce the weird y axis scale?)\n- grey rectangle highlight\n- annotations and titles\n\n\n### theme/colours\n\nHere I am getting rid of the grey background with `theme_minimal` and using `ggeasy::easy_remove_gridlines` to remove the vertical grid. Took me a while to realise that I had to specify both colour and linetype in my main aesthetic, in order to make one line block and dashed and the other solid red. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsb %>%\n  ggplot(aes(x = hours_to_game_begin, y = avg_leq, \n             colour = super_bowl_sunday, linetype = super_bowl_sunday)) +\n  geom_line() +\n  facet_grid(year~game_zone) +\n  theme_minimal() +\n   easy_remove_gridlines(axis = c(\"x\")) +\n    scale_colour_manual(values = c(\"black\", \"red\")) +\n   scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  easy_remove_legend()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n### grey box\n\nAdding a grey box using `annotate()` to mark the game time period and fixing the x axis scale. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsb %>%\n  ggplot(aes(x = hours_to_game_begin, y = avg_leq, \n             colour = super_bowl_sunday, linetype = super_bowl_sunday)) +\n  geom_line() +\n  facet_grid(year~game_zone) +\n  theme_minimal() +\n   easy_remove_gridlines(axis = c(\"x\")) +\n    scale_colour_manual(values = c(\"black\", \"red\")) +\n   scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  easy_remove_legend() +\n  annotate(\"rect\", xmin = 0, xmax = 3.5, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = \"darkgrey\") +\n    scale_x_continuous(limits = c(-6, 9), breaks= seq(-6, 9, 3)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n### title/annotations\n\nFixing the axis labels, adding a title and annotations\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsb %>%\n  ggplot(aes(x = hours_to_game_begin, y = avg_leq, \n             colour = super_bowl_sunday, linetype = super_bowl_sunday)) +\n  geom_line() +\n  facet_grid(year~game_zone) +\n  theme_minimal() +\n   easy_remove_gridlines(axis = c(\"x\")) +\n    scale_colour_manual(values = c(\"black\", \"red\")) +\n   scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  easy_remove_legend() +\n  annotate(\"rect\", xmin = 0, xmax = 3.5, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = \"darkgrey\") +\n    scale_x_continuous(limits = c(-6, 9), breaks= seq(-6, 9, 3)) +\n   scale_y_continuous(breaks= seq(50, 70, 10)) +\n  labs(title = \"Super Bowl Sunday noise exposure in decibels\", x = \"Hours from start of Super Bowl\", y = \"Average noise exposure (in decibels)\", caption = \"Data from Apple Hearing Study\") +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  theme(panel.spacing = unit(1, \"lines\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### bonus\n\n#### split by year and use map() to create separate plots\n\nI want to create a panel set like the one at the top of the post with my plots across years, so have used this code to map the ggplot code across each year, exporting each plot to png. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Split the data by year and create separate plots\nyear_plots <- sb %>%\n  group_split(year) %>%\n  map(~{\n    year_val <- unique(.x$year)\n    ggplot(.x, aes(x = hours_to_game_begin, y = avg_leq, \n                   colour = super_bowl_sunday, linetype = super_bowl_sunday)) +\n      geom_line() +\n      facet_grid(. ~ game_zone) +\n      ggtitle(paste(\"Super Bowl Noise -\", year_val)) +\n      theme_minimal() +\n   easy_remove_gridlines(axis = c(\"x\")) +\n    scale_colour_manual(values = c(\"black\", \"red\")) +\n   scale_linetype_manual(values = c(\"dashed\", \"solid\")) +\n  easy_remove_legend() +\n  annotate(\"rect\", xmin = 0, xmax = 3.5, ymin = -Inf, ymax = Inf, alpha = 0.1, fill = \"darkgrey\") +\n    scale_x_continuous(limits = c(-6, 9), breaks= seq(-6, 9, 3)) +\n   scale_y_continuous(breaks= seq(50, 70, 5)) +\n  labs( x = \"Hours from start of Super Bowl\", y = \"Average noise exposure (in decibels)\", caption = \"Data from Apple Hearing Study\") +\n        ggtitle(paste(\"Super Bowl Noise -\", year_val)) +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = -1.3, y = 53, label = \"Start game \\n6:30 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  geom_text(data = data.frame(x = 2.3, y = 53, label = \"End game \\n10:00 PM EST\", game_zone = \"Non-game States\", year = \"2024\"),\nmapping = aes(x = x, y = y, label = label),\nsize = 2, inherit.aes = FALSE) +\n  theme(panel.spacing = unit(1, \"lines\"))\n  }) \n\n\n# save all plots\nwalk2(\n  year_plots,\n  unique(sb$year),\n  ~ggsave(filename = paste0(\"superbowl_noise_\", .y, \".png\"), \n          plot = .x, width = 10, height = 6)\n)\n```\n:::\n\n\n\n\n\n# my superbowl plots\n\n::: panel-tabset\n\n\n### 2021\n\n![](superbowl_noise_2021.png)\n\n\n### 2022\n\n![](superbowl_noise_2022.png)\n\n\n### 2023\n\n![](superbowl_noise_2023.png)\n\n### 2024\n\n![](superbowl_noise_2024.png)\n\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}