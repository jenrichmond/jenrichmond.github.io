{
  "hash": "e96930168dd4c2efcbe6009cfde56877",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"day 2 slope\"\nformat: html\neditor: source\nauthor:\n  - name: Jen Richmond\n    url: https://jenrichmond.github.io/\ndate: 2025-04-02\ndraft: FALSE\nimage: featured.png\nexecute:\n  freeze: true\n---\n\n\n\n[This plot](https://ourworldindata.org/grapher/time-spent-with-relationships-by-age-us) from Our World in Data illustrates the amount of time that we spend with others and how that changes with age. The slope of line plotting the amount of time that people spend alone is pretty terrifying. Lets see if we can reproduce that plot using ggplot.\n\n<iframe src=\"https://ourworldindata.org/grapher/time-spent-with-relationships-by-age-us?tab=chart\" loading=\"lazy\" style=\"width: 100%; height: 600px; border: 0px none;\" allow=\"web-share; clipboard-write\">\n\n</iframe>\n\n### load packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(ggeasy)\nlibrary(ggannotate)\n\n# remotes::install_github(\"mattcowgill/ggannotate\")\n```\n:::\n\n\n\n### read in the data\n\nHere I am reading the data using the owidapi package and selecting and renaming columns within the same line of code. I also want to make the data long so that the category information appears in a single column and the hours values in another.\n\nI know that colours are often easier to deal with if we turn character variables into factors so that we can set the order. Here I use `fct_relevel()` to order the categories so that I can easily line up which colour is associated with each. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime <- read_csv(\"https://ourworldindata.org/grapher/time-spent-with-relationships-by-age-us.csv?v=1&csvType=full&useColumnShortNames=true\") %>%\n          clean_names() %>%\nselect(group = entity, age = year, \n         alone = t_who_category_alone, friend = t_who_category_friend, \n         children = t_who_category_children, family = t_who_category_family, \n         partner = t_who_category_partner, coworker = t_who_category_co_worker) %>%\n  pivot_longer(names_to = \"category\", values_to = \"hours\", alone:coworker)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 201 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Entity\ndbl (7): Year, t__who_category_alone, t__who_category_friend, t__who_categor...\nlgl (1): Code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ntime$category <- fct_relevel(time$category, c(\"alone\", \"partner\", \"family\", \"children\", \"friend\", \"coworker\"))\n\nlevels(time$category) #check levels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"alone\"    \"partner\"  \"family\"   \"children\" \"friend\"   \"coworker\"\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,206\nColumns: 4\n$ group    <chr> \"All people\", \"All people\", \"All people\", \"All people\", \"All …\n$ age      <dbl> 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 1…\n$ category <fct> alone, friend, children, family, partner, coworker, alone, fr…\n$ hours    <dbl> 3.629829200, 1.584973700, 0.363883400, 4.324233500, 0.0000000…\n```\n\n\n:::\n:::\n\n\n\n### make basic plot\n\nThe dataset contains time use data for Male and Female separate, but lets start with a plot of All people.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime %>%\n  filter(group == \"All people\") %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point() + \n  geom_line() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nBasic plot... check! Here is a list of things I would like to change... \n\n-   theme and colours\n-   add horizontal gridlines\n-   filter out data point more than 80\n-   start x axis at 15, 30 then in increments of 10\n-   y axis add h to numbers\n-   add group annotations rather than legend\n\n### theme and colours\n\nI started by filtering out data with age values greater than 80. I used the [ColorZilla web extension](https://chromewebstore.google.com/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp) to get the \\# codes for the colours in the Our World in Data plot and `scale_colour_manual()` to set the colours.\n\nI fixed the y axis using `scale_y_continuous()` breaks and got most of the way there with `theme_minimal()`. The `easy_remove_gridlines()` function from ggeasy makes it easy to control which gridlines you want to display. Here I want to remove both major and minor verticial lines but keep the major horizontal lines. I want the gridlines to be dotted and use the `theme(panel.grid = element_line()` to achieve that.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime %>%\n  filter(age < 80) %>%\n  filter(group == \"All people\") %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  scale_y_continuous(expand = c(0,0), breaks = seq(0,8,1)) +\n  theme_minimal() +\n  easy_remove_gridlines(axis = \"x\", major = TRUE, minor = TRUE) +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### axes\n\nNow `theme_minimal()` removes the x and y axis lines and ticks. I want to add the line/ticks back in on just the x axis so use `theme(axis.line.x = element_line()`and `theme(axis.ticks.x = element_line()`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime %>%\n  filter(age < 80) %>%\n  filter(group == \"All people\") %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2)) +\n  theme(axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1), \n        axis.ticks.x = element_line(linewidth = 0.5, color=\"darkgrey\")\n        )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### annotations\n\nThe `easy_remove_legend()` function from the `ggeasy` package makes it easy to get rid of a legend; getting annotations on the end of the each line is a bit tricker. I'm sure there is a simpler way, but the `ggannotate` package by Matt Cowgill pulls up a shiny panel that allows you to place annotations where you want them and then copy the `geom_text()` code into your chunk.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  time %>%\n  filter(age < 80) %>%\n  filter(group == \"All people\") %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth = 0.4, linetype = 2)) +\n  theme(axis.ticks.x =   element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  easy_remove_legend() +\n  geom_text(data = data.frame(x = 82, y = 8, \n    label = \"Alone\"), aes(x = x, y = y, label = label), size = 3, colour = \"#496899\") +\n  geom_text(data = data.frame(x = 82, y = 4.4, \n    label = \"With \\npartner\"), aes(x = x, y = y, label = label), size = 3,colour = \"#6b3d8d\") +\n  geom_text(data = data.frame(x = 80, y = 1.3, \n    label = \"With family\"),aes(x = x, y = y, label = label), size = 3, colour = \"#2b8465\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.7, \n    label = \"With children\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#986d39\") +\n geom_text(data = data.frame(x = 83.5, y = 0.5, \n    label = \"With friends\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#b03508\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.1, \n    label = \"With coworkers\"), aes(x = x, y = y, label = label), size = 2.5, colour = \"#883039\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### titles and captions\n\nFinishing touches... title, subtitle and caption. The `theme(plot.caption = element_text(hjust = 0))` makes the caption appear on the left side of the plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime %>%\n  filter(age < 80) %>%\n  filter(group == \"All people\") %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = 1) + \n  geom_line() +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,8.1), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth =  0.4, linetype = 2)) +\n  theme(axis.ticks.x =  element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  easy_remove_legend() +\n  ### the geom_text code below are created using the ggannotate package\n  geom_text(data = data.frame(x = 82, y = 7.8, \n    label = \"Alone\"), aes(x = x, y = y, label = label), size = 3, colour = \"#496899\") +\n  geom_text(data = data.frame(x = 82, y = 4.4, \n    label = \"With \\npartner\"), aes(x = x, y = y, label = label), size = 3,colour = \"#6b3d8d\") +\n  geom_text(data = data.frame(x = 80, y = 1.3, \n    label = \"With family\"),aes(x = x, y = y, label = label), size = 3, colour = \"#2b8465\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.7, \n    label = \"With children\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#986d39\") +\n geom_text(data = data.frame(x = 83.5, y = 0.5, \n    label = \"With friends\"), aes(x = x, y = y, label = label), size = 2.5,colour = \"#b03508\") +\n  geom_text(data = data.frame(x = 83.5, y = 0.1, \n    label = \"With coworkers\"), aes(x = x, y = y, label = label), size = 2.5, colour = \"#883039\") +\n  labs(title = \"Who Americans spend their time with, by age, All people\", \n       subtitle = \"Measured in hours per day, based on averages from surveys in the United States \\nbetween 2010 and 2023\", \n       x = \"Age\", \n       y = \"Hours\",\n       caption = \"Data source: U.S. Bureau of Labor Statistics (2023). \\nNote: Activities such as sleeping, grooming, and personal care are not included in the data. \\nRelationships used to categorize people are not exhaustive and time spent with multiple people counts toward all \\n(e.g., attending a party with friends and partner counts toward both friends and partner)\") +\n  theme(plot.caption = element_text(hjust = 0)) # make the caption appear on the left\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### bonus\n\nAt this point I am wondering whether who people spend their time with differs for men and women. Here I have changed the filter to include both Men and Women and added a `facet_wrap(~group)` to plot the gender data separately. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime %>%\n  filter(age < 80) %>%\n  filter(group %in% c(\"Men\", \"Women\")) %>%\n  ggplot(aes(x = age, y = hours, colour = category)) +\n  geom_point(size = .6) + \n  geom_line() +\n  facet_wrap(~ group) +\n  scale_colour_manual(values = c(\"#496899\", \"#6b3d8d\", \"#2b8465\", \"#986d39\", \"#b03508\", \"#883039\")) +\n  theme_minimal() +\n  scale_y_continuous(expand = c(0,0), limits = c(-0.05,10), breaks = seq(0,9,1)) +\n  scale_x_continuous(breaks=c(15,30,40,50,60,70,80)) +\n  easy_remove_gridlines(axis = \"x\") +\n  easy_remove_gridlines(axis = \"y\", major = FALSE, minor = TRUE) +\n  theme(panel.grid = element_line(linewidth =  0.4, linetype = 2)) +\n  theme(axis.ticks.x =  element_line(linewidth = 0.5, color=\"darkgrey\") , \n        axis.line.x = element_line(linewidth = 0.2, colour = \"darkgrey\", linetype=1)) +\n  labs(title = \"Who Americans spend their time with, by age, Men and Women\", \n        caption = \"Data source: U.S. Bureau of Labor Statistics (2023)\", \n              x = \"Age\", \n       y = \"Hours\") +\n    theme(plot.caption = element_text(hjust = 0)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n \nIt seems that women in their later years spend more time that men alone and less time with a partner, presumably because they are living longer than the men in their lives. \n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}