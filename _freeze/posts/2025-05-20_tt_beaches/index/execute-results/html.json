{
  "hash": "44fcfef6aa83356ad922986d754f6365",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"sydney beaches\"\nformat: html\ndate: 2025-05-20\nauthor: Jen Richmond\nimage: featured.png\n---\n\n\n\nMy first TidyTuesday data curation!! This is an updated version of the dataset we used for [#RYouWithMe](https://rladiessydney.org/courses/), a series of online modules designed to get beginners into #rstats. I am excited to dig in and learn something new about what is going on with poo at Sydney beaches.\n\nIn poking about the BeachWatch website, I noticed that they have a key that gives each beach a star rating according to the bacteria levels and the risk to swimmers. \n\nI thought it might be interesting to look at different beach sites across the city and see how frequently each beach is rated as 4 stars \"Good\". \n\nI am most interested in data in the last 5 years so have filtered to only include reports from 2020 until 2025. \n\n![](key.png)\n\n\n\n\n\n\n\n\n\n\n### read the data\n\nHere I am reading the data from TidyTuesday, filtering for date, renaming the enterococci variable to make it a bit easier to deal with and adding a new column that codes each bug level as either Good, Fair, Poor, or Bad, according to the BeachWatch key.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(gt)\nlibrary(ggeasy)\n\n\n\nmy_colours <- RColorBrewer::brewer.pal(4, \"RdYlGn\")\n\n\nwater <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-05-20/water_quality.csv') %>%\n  rename(bugs = enterococci_cfu_100ml) %>%\n  mutate(stars = case_when(bugs < 41 ~ \"Good\", \n                            bugs > 500 ~ \"Bad\",\n                           bugs %in% 41:200 ~ \"Fair\", \n                           bugs %in% 201:500 ~ \"Poor\", \n                           TRUE ~ \"NA\"\n                           )) %>%\n  filter(year(date) > 2019) %>%\n  arrange(date)\n\nglimpse(water)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 18,965\nColumns: 11\n$ region              <chr> \"Western Sydney\", \"Western Sydney\", \"Western Sydne…\n$ council             <chr> \"Blue Mountains City Council\", \"Blue Mountains Cit…\n$ swim_site           <chr> \"Wentworth Falls Lake - Jetty\", \"Wentworth Falls L…\n$ date                <date> 2020-01-03, 2020-01-03, 2020-01-03, 2020-01-07, 2…\n$ time                <time> 11:00:00, 11:20:00, 09:00:00, 08:20:00, 10:05:00,…\n$ bugs                <dbl> 12, 6, 92, 1, 8, 5, 2, 4, 1, 2, 24, 8, 3, 2, 0, NA…\n$ water_temperature_c <dbl> 24, 25, 22, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21…\n$ conductivity_ms_cm  <dbl> 74, 75, 126, 53800, 54400, 54300, 54600, 54400, 53…\n$ latitude            <dbl> -33.70470, -33.70259, -33.73207, -34.06984, -33.97…\n$ longitude           <dbl> 150.3702, 150.3693, 150.2355, 151.1569, 151.2514, …\n$ stars               <chr> \"Good\", \"Good\", \"Fair\", \"Good\", \"Good\", \"Good\", \"G…\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# plot theme\n\ntheme_beaches <- function() { \n  \n  theme_minimal() %+replace%\n    theme(\n      text = element_text(family = \"Karla\"), \n    plot.title = element_text(size = 16, hjust = 0.1, \n                              colour = \"black\",  margin = margin(b = 10)),\n    plot.subtitle = element_text(size = 12, hjust = 0.1, \n                                 colour = \"black\",  margin = margin(b = 10)),\n    plot.title.position = \"plot\",  # Position at the \"plot\" level rather than \"panel\"\n    plot.subtitle.position = \"plot\",  # Position at the \"plot\" level rather than \"panel\"\n    panel.background = element_rect(fill = \"antiquewhite2\", color = NA),\n    plot.background = element_rect(fill = \"antiquewhite2\", color = NA),\n    plot.margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\"), \n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    legend.title = element_blank()\n      )\n    \n}\n```\n:::\n\n\n\n\n\n\n## how many days are good for swimming\n\n### city beaches\n\nIn the [#RYouWithMe modules](https://rladiessydney.org/courses/), we used data from the Sydney City beaches, so I am going to start with those because I am a bit more familiar with them. \n\n#### raw count\n\nHere I am filtering the water data to include only beaches that are within the Sydney city region and using the `tabyl` function from the `janitor` package to count how often each site was rated Good, Fair, Poor, and Bad. Then I make that data long and fix the order of the rating levels, before plotting. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncity <-  water %>%\n  filter(region == \"Sydney City\") \n\ngood_days_city <- city %>%\n tabyl(swim_site, stars) %>%\n  select(swim_site, Good, Fair, Poor, Bad) \n\n\ngood_days_city_long <- good_days_city %>%\n  pivot_longer(names_to = \"rating\", values_to = \"count\", Good:Bad) %>%\n  mutate(rating = fct_relevel(rating, c(\"Bad\", \"Poor\", \"Fair\", \"Good\"))) \n\n\ngood_days_city_long %>%\n    ggplot(aes(x = reorder(swim_site, count), y = count, fill = rating)) +\n  geom_col() +\n   scale_fill_manual(values = my_colours) +\n  coord_flip() +\n  labs(x = \"Beach\", y = \"Count of ratings\", title = \"Water quality at Sydney City Beaches\", \n        subtitle= \"Data from BeachWatch NSW 2020-2025\") +\n  theme_beaches()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=2800}\n:::\n:::\n\n\n\n#### percent\n\nAcross 2020-2025, there is a small amount of variability in the number of readings that each beach site has so I am going to tweak this to plot percent rather than raw data. I have also ordered the bars so that the beaches that have the highest percent Good ratings are at the top. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngood_days_city_long_percent <- good_days_city %>%\n  pivot_longer(names_to = \"rating\", values_to = \"count\", Good:Bad) %>%\n  mutate(rating = fct_relevel(rating, c(\"Bad\", \"Poor\", \"Fair\", \"Good\"))) %>%\n  group_by(swim_site) %>%\n  mutate(total_days = sum(count)) %>%\n  rowwise() %>%\n  mutate(percent = count/total_days) %>%\n   group_by(swim_site) %>%\n  mutate(good_percent = percent[rating == \"Good\"]) %>% #pull good % for use in reorder\n  ungroup()\n\n\ngood_days_city_long_percent %>%\n    ggplot(aes(x = reorder(swim_site, good_percent), y = percent, fill = rating)) +\n  geom_col() +\n   scale_fill_manual(values = my_colours) +\n  coord_flip() +\n  labs(x = \"Beach\", y = \"Percent of ratings\", title = \"Water quality at Sydney City Beaches\", \n       subtitle= \"Data from BeachWatch NSW 2020-2025\") +\n    theme_beaches()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=2800}\n:::\n:::\n\n\n\n\nIt is a bit disconcerting that Coogee beach (where I used to live) is only rated \"Good\" 75% of the time. \n\n\n### all regions\n\nNow I would like to get a plot like this for all the other regions. It is interesting that there are so many data points for Northern Sydney and hardly any for Western Sydney, so that might be something to dig into too. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwater %>%\n  tabyl(region) %>%\n  gt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"fkpmrbetvy\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#fkpmrbetvy table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#fkpmrbetvy thead, #fkpmrbetvy tbody, #fkpmrbetvy tfoot, #fkpmrbetvy tr, #fkpmrbetvy td, #fkpmrbetvy th {\n  border-style: none;\n}\n\n#fkpmrbetvy p {\n  margin: 0;\n  padding: 0;\n}\n\n#fkpmrbetvy .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#fkpmrbetvy .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#fkpmrbetvy .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#fkpmrbetvy .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#fkpmrbetvy .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#fkpmrbetvy .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#fkpmrbetvy .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#fkpmrbetvy .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#fkpmrbetvy .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#fkpmrbetvy .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#fkpmrbetvy .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fkpmrbetvy .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#fkpmrbetvy .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#fkpmrbetvy .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#fkpmrbetvy .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fkpmrbetvy .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#fkpmrbetvy .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#fkpmrbetvy .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#fkpmrbetvy .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fkpmrbetvy .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#fkpmrbetvy .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fkpmrbetvy .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#fkpmrbetvy .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fkpmrbetvy .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fkpmrbetvy .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fkpmrbetvy .gt_left {\n  text-align: left;\n}\n\n#fkpmrbetvy .gt_center {\n  text-align: center;\n}\n\n#fkpmrbetvy .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#fkpmrbetvy .gt_font_normal {\n  font-weight: normal;\n}\n\n#fkpmrbetvy .gt_font_bold {\n  font-weight: bold;\n}\n\n#fkpmrbetvy .gt_font_italic {\n  font-style: italic;\n}\n\n#fkpmrbetvy .gt_super {\n  font-size: 65%;\n}\n\n#fkpmrbetvy .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#fkpmrbetvy .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#fkpmrbetvy .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#fkpmrbetvy .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#fkpmrbetvy .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#fkpmrbetvy .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#fkpmrbetvy .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#fkpmrbetvy .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#fkpmrbetvy div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"region\">region</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\">n</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"percent\">percent</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Northern Sydney</td>\n<td headers=\"n\" class=\"gt_row gt_right\">6711</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0.35386238</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Southern Sydney</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2456</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0.12950171</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Sydney City</td>\n<td headers=\"n\" class=\"gt_row gt_right\">3436</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0.18117585</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Sydney Harbour</td>\n<td headers=\"n\" class=\"gt_row gt_right\">5712</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0.30118640</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Western Sydney</td>\n<td headers=\"n\" class=\"gt_row gt_right\">650</td>\n<td headers=\"percent\" class=\"gt_row gt_right\">0.03427366</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nI would like to count the number of times each swim site gets each star rating but keep information about which region the beach belongs too so I can compare regions.  \n\nIf I use `water %>% tabyl(swim_site, stars)` the output drops information about the region. \n\nBut if I add region as an argument to the `tabyl()` function, the output ends up being a list. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngood_days_region <- water %>%\n tabyl(swim_site, stars, region)\n\n\nclass(good_days_region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n\n\nMaybe I write a function that will apply the cleaning process and then make a plot for each region in the list. \n\n\nMy function takes two arguments: the data and names of the regions. It has a processing step which filters out sites that have missing data across the board, selects just relevant variables, makes the data long, and fixes the levels of the quality. The output of that step (processed_df) is fed into the plot. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplot_region_data_raw <- function(df, region_name) {\n  \n  processed_df <- df %>%\n    filter(Bad > 0 | Fair > 0 | Good > 0 | Poor > 0) %>%\n    select(swim_site, Good, Fair, Poor, Bad) %>%\n    pivot_longer(names_to = \"rating\", values_to = \"count\", Good:Bad) %>%\n    mutate(rating = fct_relevel(rating, c(\"Bad\", \"Poor\", \"Fair\", \"Good\"))) \n    \n   \n  plot <- ggplot(processed_df, \n                 aes(x = reorder(swim_site, count), \n                     y = count, fill = rating)) +\n    geom_col() +\n     scale_fill_manual(values = my_colours) +\n    coord_flip() +\n    labs(\n      title = paste(\"Water Quality Ratings in\", region_name),\n      subtitle= \"Data from BeachWatch NSW 2020-2025\",\n      x = \"Beach\",\n      y = \"Count of ratings\",\n      fill = \"Rating\"\n    ) +\n    theme_beaches() \n  \n  return(plot)\n}\n```\n:::\n\n\n\nOnce I have the function in my enviornment, I can use `map2()` from `purrr` to run the processing/plot function on each of the regions in the list and output a list of plots. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nregion_plots_raw <- map2(good_days_region,  # the list \n  names(good_days_region),  # the names of each list element\n  plot_region_data_raw # function to map \n)\n```\n:::\n\n\n\n\n#### Water Quality by region: Count of ratings\n\n::: panel-tabset\n\n#### Northern Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=2800}\n:::\n:::\n\n\n\n\n#### Southern Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=2800}\n:::\n:::\n\n\n\n\n#### Sydney City\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=2800}\n:::\n:::\n\n\n\n#### Sydney Harbour\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=2800}\n:::\n:::\n\n\n\n#### Western Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=2800}\n:::\n:::\n\n\n:::\n\n\nIt is curious that Western Sydney has so many fewer data points than other regions, but it also makes it worth repeating the plots with percents. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplot_region_data_percent <- function(df, region_name) {\n  processed_df <- df %>%\n    filter(Bad > 0 | Fair > 0 | Good > 0 | Poor > 0) %>%\n    select(swim_site, Good, Fair, Poor, Bad) %>%\n    pivot_longer(names_to = \"rating\", values_to = \"count\", Good:Bad) %>%\n    mutate(rating = fct_relevel(rating, c(\"Bad\", \"Poor\", \"Fair\", \"Good\"))) %>%\n     group_by(swim_site) %>%\n  mutate(total_days = sum(count)) %>%\n  rowwise() %>%\n  mutate(percent = count/total_days) %>%\n   group_by(swim_site) %>%\n  mutate(good_percent = percent[rating == \"Good\"]) %>% #pull good % for use in reorder\n  ungroup()\n  \n  plot <- ggplot(processed_df, \n                 aes(x = reorder(swim_site, good_percent), y = percent, fill = rating)) +\n    geom_col() +\n     scale_fill_manual(values = my_colours) +\n    coord_flip() +\n    labs(\n      title = paste(\"Water Quality Ratings in\", region_name),\n      subtitle= \"Data from BeachWatch NSW 2020-2025\",\n      x = \"Beach\",\n      y = \"Percent of ratings\",\n      fill = \"Rating\"\n    ) +\n    theme_beaches() \n  \n  return(plot)\n}\n\n\nregion_plots_percent <- map2(good_days_region,  # list of data frames\n  names(good_days_region),  # Names of each list element\n  plot_region_data_percent # function to map \n)\n```\n:::\n\n\n\n#### Water Quality by region: Percent of ratings\n\n::: panel-tabset\n\n#### Northern Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=2800}\n:::\n:::\n\n\n\n\n#### Southern Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=2800}\n:::\n:::\n\n\n\n\n#### Sydney City\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=2800}\n:::\n:::\n\n\n\n#### Sydney Harbour\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=2800}\n:::\n:::\n\n\n\n#### Western Sydney\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in plot_theme(plot): The `plot.subtitle.position` theme element is not defined in the element\nhierarchy.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=2800}\n:::\n:::\n\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n## what is going on in Western Sydney?\n\nThe data presented above show that Western Sydney beaches have many fewer data points than beaches in other regions.  \n\nIt got me thinking about potential differences in testing frequency. Here I am computing a new variable that calcuates the time between sucessive data points using the `difftime()` function. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nfreq <- water %>%\n  select(region, swim_site, bugs, stars, date) %>%\n  arrange(swim_site, date) %>%\n mutate(testing_gap = difftime(date, lag(date), units = \"days\")) %>%\n  mutate(testing_gap = as.numeric(testing_gap)) %>%\n  filter(testing_gap > 0)\n\nfreq %>%\n  group_by(region) %>%\n  summarise(mean_time_lapsed = mean(testing_gap, na.rm= TRUE)) %>%\n  gt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"lekfhcjhik\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#lekfhcjhik table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#lekfhcjhik thead, #lekfhcjhik tbody, #lekfhcjhik tfoot, #lekfhcjhik tr, #lekfhcjhik td, #lekfhcjhik th {\n  border-style: none;\n}\n\n#lekfhcjhik p {\n  margin: 0;\n  padding: 0;\n}\n\n#lekfhcjhik .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#lekfhcjhik .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#lekfhcjhik .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#lekfhcjhik .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#lekfhcjhik .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#lekfhcjhik .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#lekfhcjhik .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#lekfhcjhik .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#lekfhcjhik .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#lekfhcjhik .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#lekfhcjhik .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#lekfhcjhik .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#lekfhcjhik .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#lekfhcjhik .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#lekfhcjhik .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lekfhcjhik .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#lekfhcjhik .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#lekfhcjhik .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#lekfhcjhik .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lekfhcjhik .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#lekfhcjhik .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lekfhcjhik .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#lekfhcjhik .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lekfhcjhik .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lekfhcjhik .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lekfhcjhik .gt_left {\n  text-align: left;\n}\n\n#lekfhcjhik .gt_center {\n  text-align: center;\n}\n\n#lekfhcjhik .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#lekfhcjhik .gt_font_normal {\n  font-weight: normal;\n}\n\n#lekfhcjhik .gt_font_bold {\n  font-weight: bold;\n}\n\n#lekfhcjhik .gt_font_italic {\n  font-style: italic;\n}\n\n#lekfhcjhik .gt_super {\n  font-size: 65%;\n}\n\n#lekfhcjhik .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#lekfhcjhik .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#lekfhcjhik .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#lekfhcjhik .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#lekfhcjhik .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#lekfhcjhik .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#lekfhcjhik .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#lekfhcjhik .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#lekfhcjhik div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"region\">region</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean_time_lapsed\">mean_time_lapsed</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Northern Sydney</td>\n<td headers=\"mean_time_lapsed\" class=\"gt_row gt_right\">6.332735</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Southern Sydney</td>\n<td headers=\"mean_time_lapsed\" class=\"gt_row gt_right\">6.316993</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Sydney City</td>\n<td headers=\"mean_time_lapsed\" class=\"gt_row gt_right\">6.187500</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Sydney Harbour</td>\n<td headers=\"mean_time_lapsed\" class=\"gt_row gt_right\">9.577256</td></tr>\n    <tr><td headers=\"region\" class=\"gt_row gt_left\">Western Sydney</td>\n<td headers=\"mean_time_lapsed\" class=\"gt_row gt_right\">18.598131</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nIt is clear that while the water quality in most regions is tested about once a week, in Western Sydney data points come in on average every 18 days. Is that because the frequency of testing is genuinely lower in Western Sydney, or are there gaps in the data?\n\nThis plot would suggest the latter is true. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nws <- freq %>%\n  filter(region == \"Western Sydney\") \n\n\nws %>%\n  ggplot(aes(x = date, y= testing_gap)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~swim_site) +\n  theme_minimal() +\n  labs(title = \"Days between data points in Western Sydney\", x = \"Date\", y = \"Testing gap\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=2800}\n:::\n:::\n\n\n\nIn fact, if we look at the number of data points in the dataset per month, it is clear that in Western Sydney, at some beach sites, testing is seasonal and only happens in the summer. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nws_monthly_count <- ws %>%\n  mutate(month = month(date, label = TRUE)) %>%\n  group_by(month, swim_site) %>%\n  summarise(count = n()) \n\n\nws_monthly_count %>%\n  ggplot(aes(x = month, y = count)) +\n  geom_point() +\n  facet_wrap(~swim_site) +\n  theme_minimal() +\n  labs(title = \"Water quality testing is seasonal in Western Sydney\", x = \"Month\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=2800}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}