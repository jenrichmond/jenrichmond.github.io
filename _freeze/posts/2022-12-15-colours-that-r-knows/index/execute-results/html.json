{
  "hash": "90dc3ec5f505c29ad95d944b501e9533",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: colours that R knows\ndate: '2022-12-14'\nauthor:\n  - name: Jen Richmond\n    url: https://jenrichmond.github.io/\nformat: html\neditor: source\ndraft: FALSE\nimage: featured.png\ncategories:\n- ggplot\n---\n\n\n \nI have been working through the [ggplot R Advent calendar by Kiirsti Owen](https://github.com/kiirsti/ggplot_adventcalendaR) with some lovely RLadies friends and we got up to Day 15 where we started controlling colours in ggplot with `scale_fill_manual()`. Our immediate question was \"how to you know what the names of the colours that R knows are?\" \n\nThis is a \"I don't have to google\" post about finding the colours that R knows about. \n\n### read the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ntrees <-read_csv(\"https://raw.githubusercontent.com/kiirsti/ggplot_adventcalendaR/main/xmas.trees.csv\")\n```\n:::\n\n\n\n### make a plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrees %>%\nggplot(aes(x=type, y=height))+\n  geom_boxplot(aes(fill=type), colour=\"black\")+\n  theme_classic()+\n  scale_fill_manual(values=c(\"darkgreen\", \"firebrick2\", \"mediumseagreen\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nYou can have R list the names of all the colours it knows (there are 657 of them) using the `colours()` function, but that is not so useful if you want to see the difference between aquamarine1 and aquamarine2. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list the first 20 colours that R knows \n\nhead(colours(), 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"   \"aquamarine3\"   \"aquamarine4\"  \n[13] \"azure\"         \"azure1\"        \"azure2\"        \"azure3\"       \n[17] \"azure4\"        \"beige\"         \"bisque\"        \"bisque1\"      \n```\n\n\n:::\n:::\n\n\n\n\nWe eventually found a function in the `epitools` package that will display all the colours and allow you to point a click the ones you want! It doesn't work so well in an Rmd chunk- you are best to try it in the console. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"epitools\")\n\nlibrary(epitools)\n\ncolors.plot(locator = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] color.names\n<0 rows> (or 0-length row.names)\n```\n\n\n:::\n:::\n\n\n\nLoad the epitools package and then use the `colors.plot()` function in the console, setting locator = TRUE. A matrix will appear in your Plots tab. You can use your mouse to pick the colours you want and then click Finish to have R print the names of those colours to your console. Watch me do it in the screencast below. \n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/aMyi0m9ZD_k\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nYou can then use those names to revise your plot colours. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrees %>%\nggplot(aes(x=type, y=height))+\n  geom_boxplot(aes(fill=type), colour=\"black\")+\n  theme_classic()+\n  scale_fill_manual(values=c(\"seagreen\", \"maroon2\", \"dodgerblue2\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}